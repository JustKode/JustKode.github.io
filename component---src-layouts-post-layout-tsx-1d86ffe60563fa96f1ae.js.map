{"version":3,"sources":["webpack:///./src/components/wrapper/categoryWrapper.tsx","webpack:///./src/components/smallPostBlock.tsx","webpack:///./src/layouts/postLayout.tsx"],"names":["styled","span","MainContainer","div","BackgroundContainer","props","src","BottomContainer","Title","TimeContainer","Content","BlackContainer","SmallPostBlock","tags","map","x","key","to","toLowerCase","path","img","style","margin","title","summary","date","PostsSubContainer","SubContainer","TitleContainer","SummaryContainer","LittleContainer","PostBanner","Air","SeriesContainer","SeriesTitleContainer","SeriesContentContainer","SeriesContentTitleContainer","SeriesDateContainer","RecentPost","PostsContainer","GoToPostContainer","Template","data","pageContext","series","allMarkdownRemark","edges","categoryPosts","markdownRemark","frontmatter","html","description","id","replace","substr","seriesPosts","node","Posts","filter","edge","keyword","className","dangerouslySetInnerHTML","__html","async"],"mappings":"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","file":"component---src-layouts-post-layout-tsx-1d86ffe60563fa96f1ae.js","sourcesContent":["import styled from \"styled-components\"\n\nexport default styled.span`\n\tdisplay: inline-block;\n    margin-right: 4px;\n\tpadding: 6px 8px;\n\tbackground-color: black;\n    font-size: 12px;\n\n\ta {\n\t\tcolor: white;\n\t\ttext-decoration: none;\n\t\tfont-family: Montserrat,Helvetica,Arial,sans-serif;\n\t}\n\t@media (max-width: 1079px) {\n\t\tpadding: 6px;\n\t\tfont-size: 10px;\n\t}\n`","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FaFolderOpen, FaCalendarDay } from \"react-icons/fa\"\nimport { Link } from 'gatsby'\n\nimport CategoryWrapper from \"./wrapper/categoryWrapper\"\n\nconst MainContainer = styled.div`\n\tdisplay: inline-block;\n\twidth: calc(100% - 25px);\n\tmax-width: 230px;\n\theight: 250px;\n\tmargin: 10px;\n\tposition: relative;\n\ttext-align: left;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\t\n\n\t@media (max-width: 1079px) {\n\t\tmax-width: 400px;\n\t\tdisplay: inline-block;\n\t}\n\n\t@media (max-width: 902px) {\n\t\tmax-width: none;\n\t}\n\n\n\t&:hover {\n\t\tbackground-size: calc(cover * 1.2);\n\t}\n\n`\nconst BackgroundContainer = styled.div<{src: string}>`\n\twidth: 100%;\n\theight: 100%;\n\t\n\tposition: absolute;\n\topacity: 0.5;\n\tbackground-image: url('${props => props.src}');\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center top;\n\ttransition: 0.4s;\n\n\t&:hover {\n\t\ttransform: scale(1.2);\n\t}\n`\n\nconst BottomContainer = styled.div`\n\twidth: 100%;\n\tposition: absolute;\n\tbottom: 0%;\n\n\ta {\n\t\tcolor: white;\n\t\ttext-decoration: none;\n\t}\n`\n\nconst Title = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tpadding: 8px;\n\tcolor: white;\n\ttransition: 0.4s;\t\n\n\t&:hover {\n\t\tcolor: #cccccc;\n\t}\n`\n\nconst TimeContainer = styled.div`\n\tfont-size: 14px;\n\tcolor: #cccccc;\n\tpadding: 8px;\n`\n\nconst Content = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tcolor: white;\n\tpadding-left: 8px;\n`\n\nconst BlackContainer = styled.div`\n\tz-index: -1;\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\tbackground-color: black;\n\tpointer-events: none;\n`\n\ninterface PostPreview {\n\ttitle: string;\n\ttags: Array<string>;\n\tdate: string;\n\timg: string;\n\tpath: string;\n\tsummary: string;\n\tkey: string;\n}\n\nconst SmallPostBlock: React.FunctionComponent<PostPreview> = (props) => {\n\tconst tags = props.tags.map(x =>\n\t\t\t<CategoryWrapper key={x}>\n\t\t\t\t<Link to={`/${x.toLowerCase()}`}>\n\t\t\t\t\t{x}\n\t\t\t\t</Link>\n\t\t\t</CategoryWrapper>\n\t\t)\n\t\n\treturn (\n\t\t\n\t\t\t<MainContainer>\n\t\t\t\t<Link to={`${props.path}`}>\n\t\t\t\t\t<BackgroundContainer src={`${props.img}`}/>\n\t\t\t\t\t<BlackContainer/>\n\t\t\t\t</Link>\n\t\t\t\t<BottomContainer>\n\t\t\t\t\t<div style={{margin: \"0 8px\"}}>{tags}</div>\n\t\t\t\t\t<Link to={`${props.path}`}>\n\t\t\t\t\t\t<Title>{props.title}</Title>\n\t\t\t\t\t\t<Content>{props.summary}</Content>\n\t\t\t\t\t\t<TimeContainer><FaCalendarDay /> {props.date}</TimeContainer>\n\t\t\t\t\t</Link>\n\t\t\t\t</BottomContainer>\n\t\t\t</MainContainer>\n\t\t\n\t)\n}\n\nexport default SmallPostBlock;","import React from \"react\"\nimport styled from \"styled-components\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\nimport SEO from \"../components/seo\"\nimport SmallPostBlock from \"../components/smallPostBlock\"\nimport CategoryWrapper from \"../components/wrapper/categoryWrapper\"\n\nimport { graphql, Link } from \"gatsby\"\nimport { FaRegCalendar } from \"react-icons/fa\"\n\nconst MainContainer = styled.div`\n\n`\n\nconst PostsSubContainer = styled.div`\n\twidth: 100%;\n\tmax-width: 1080px;\n\tbox-sizing: border-box;\n\tpadding: 20px;\n\tmargin: auto;\n`\n\nconst SubContainer = styled.div`\n\twidth: 100%;\n\tmax-width: 1080px;\n\tmargin: auto;\n\tpadding: 20px;\n\tbox-sizing: border-box;\n\tposition: relative;\n`\n\nconst BottomContainer = styled.div`\n\tposition: absolute;\n\tbottom: 0%;\n\tpadding-bottom: 12px;\n\twidth: calc(100% - 40px);\n`\n\nconst TitleContainer = styled.div`\n\tfont-weight: 600;\n\tfont-size: 32px;\n\t@media (max-width: 1079px) {\n\t\tfont-size: 18px;\n\t}\n`\n\nconst SummaryContainer = styled.span`\n\tfont-size: 12px;\n\tcolor: white;\n\tmargin-right: 10px;\n`\n\nconst LittleContainer = styled.span`\n\tfont-size: 14px;\n\tcolor: #bbbbbb;\n\tdisplay: inline-block;\n`\n\nconst PostBanner = styled.div`\n\twidth: 100%;\n\theight: 300px;\n\tcolor: white;\n\tposition: relative;\n\toverflow: hidden;\n`\n\nconst BlackContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: black;\n\tposition: absolute;\n\tz-index: -1;\n\topacity: 0.5;\n`\n\nconst BackgroundContainer = styled.div<{src: string}>`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: url('${props => props.src}');\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center;\n\tanimation-name: zoomin;\n    animation-duration: 5s;\n\tanimation-fill-mode: both;\n\tz-index: -2;\n\tposition: absolute;\n\n\t@-webkit-keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n\t@keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n`\n\nconst Air = styled.div`\n\twidth: 100%;\n\theight: 100px;\n`\n\nconst SeriesContainer = styled.div`\n\tmargin: 8px;\n\tborder: 1px solid #bbbbbb;\n\tcolor: #888888;\n`\n\nconst SeriesTitleContainer = styled.div`\n\tmargin: 8px;\n\tpadding: 4px;\n\tborder-bottom: 1px solid #bbbbbb;\n`\n\nconst SeriesContentContainer = styled.div`\n\tmargin: 8px 12px;\n\theight: 1.3rem;\n\tline-height: 1.3rem;\n`\n\nconst SeriesContentTitleContainer = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\tdisplay: inline-block;\n\twidth: calc(100% - 6rem);\n\toverflow: hidden;\n\tvertical-align: middle;\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: #888888;\n\t}\n`\n\nconst SeriesDateContainer = styled.div`\n\tdisplay: inline-block;\n\twidth: 6rem;\n\tvertical-align: middle;\n\tfont-size: 0.9rem;\n\ttext-align: right;\n`\n\nconst RecentPost = styled.div`\n\tpadding: 20px;\n\tmargin: 20px;\n\tfont-family: Montserrat;\n\tfont-size: 32px;\n\tcolor: #222222;\n\tborder-bottom: 1px solid black;\n\n\t@media (max-width: 1080px) {\n\t\tpadding: 8px;\n\t\tmargin: 8px;\n\t\tfont-size: 14px;\n\t}\n`\n\nconst PostsContainer = styled.div`\n\tpadding: 20px;\n`\n\nconst GoToPostContainer = styled.div`\n\ttext-align: center;\n\tpadding: 30px 15px;\n\tfont-size: 18px;\n\ta {color: #444444; transition: 0.4s; text-decoration: none;}\n\ta:hover {color: black;}\n`\n\nexport default function Template({\n  data, pageContext: {\n\t\tseries: {\n\t\t\tdata: {\n\t\t\t\tallMarkdownRemark: {edges: series}\n\t\t\t}\n\t\t}, \n\t\tcategoryPosts: {\n\t\t\tdata: {\n\t\t\t\tallMarkdownRemark: {edges: categoryPosts}\n\t\t\t}\n\t\t}\n\t} // this prop will be injected by the GraphQL query below.\n}) {\n\tconst { markdownRemark } = data // data.markdownRemark holds your post data\n\tconst { frontmatter, html, id } = markdownRemark\n\t\n\tconst description = html.replace(/<[^>]*>?/gm, '').substr(0,150)\n\tconst tags = frontmatter.tags.map(x => <CategoryWrapper key={x}><Link to={`/${x.toLowerCase()}`}>{x}</Link></CategoryWrapper>)\n\t\n  const seriesPosts = series.map(x => <SeriesContentContainer key={x.node.id}>\n\t  <SeriesContentTitleContainer style={x.node.frontmatter.title == frontmatter.title ? {'fontWeight': 'bold'}: {}}><Link to={x.node.frontmatter.path}>{x.node.frontmatter.title}</Link></SeriesContentTitleContainer>\n\t  <SeriesDateContainer>{x.node.frontmatter.date}</SeriesDateContainer>\n  </SeriesContentContainer>)\n\t\n\tconst Posts = categoryPosts\n\t.filter(edge => !!edge.node.frontmatter.date)\n\t.map(edge => <SmallPostBlock\n\t\t\t\t\t key={edge.node.id}\n\t\t\t\t\t title={edge.node.frontmatter.title}\n\t\t\t\t\t date={edge.node.frontmatter.date}\n\t\t\t\t\t tags={edge.node.frontmatter.tags}\n\t\t\t\t\t img={edge.node.frontmatter.img}\n\t\t\t\t\t summary={edge.node.frontmatter.summary}\n\t\t\t\t\t path={edge.node.frontmatter.path}/>)\n\t\n\treturn (\n\t\t<MainContainer>\n\t\t\t<Header />\n\t\t\t<SEO title={frontmatter.title} description={description} img={frontmatter.img} keyword={frontmatter.keyword}/>\n\t\t\t<PostBanner>\n\t\t\t\t<BlackContainer />\n\t\t\t\t<BackgroundContainer src={frontmatter.img || \"/banner.jpg\"} />\n\t\t\t\t<SubContainer style={{\"height\": \"100%\"}}>\n\t\t\t\t\t<BottomContainer>\n\t\t\t\t\t\t<div style={{\"marginBottom\": \"8px\"}}>{tags}</div>\n\t\t\t\t\t\t<TitleContainer>{frontmatter.title}</TitleContainer>\n\t\t\t\t\t\t<SummaryContainer>{frontmatter.summary}</SummaryContainer>\n\t\t\t\t\t\t<LittleContainer><FaRegCalendar/> {frontmatter.date}</LittleContainer>\n\t\t\t\t\t</BottomContainer>\n\t\t\t\t</SubContainer>\n\t\t\t</PostBanner>\n\t\t\t<SubContainer>\n\t\t\t\t<div className=\"markdown-body\" dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t<Air />\n\t\t\t\t<script src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML' async />\n\t\t\t\t{\n\t\t\t\t\tfrontmatter.series !== null && (\n\t\t\t\t\t\t<SeriesContainer>\n\t\t\t\t\t\t\t<SeriesTitleContainer><strong>{frontmatter.series}</strong> 시리즈의 다른 글</SeriesTitleContainer>\n\t\t\t\t\t\t\t{seriesPosts}\n\t\t\t\t\t\t</SeriesContainer>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</SubContainer>\n\t\t\t<PostsSubContainer>\n\t\t\t\t<RecentPost>Recent Posts in <strong>{frontmatter.tags[0]}</strong> Category</RecentPost>\n\t\t\t\t<PostsContainer>\n\t\t\t\t\t{Posts}\n\t\t\t\t</PostsContainer>\n\t\t\t\t<GoToPostContainer>\n\t\t\t\t\t<Link to={`/${frontmatter.tags[0].toLowerCase()}`}>Click To See More Posts</Link>\n\t\t\t\t</GoToPostContainer>\n\t\t\t</PostsSubContainer>\n\t\t\t<Footer />\n\t\t</MainContainer>\n\t)\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n\t  id\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        path\n        title\n        tags\n\t\tkeyword\n\t\tsummary\n        img\n\t\tseries\n      }\n    }\n  }\n`"],"sourceRoot":""}