{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/java/cpp-to-java-1","result":{"data":{"markdownRemark":{"html":"<h3>Hello World!</h3>\n<p>안녕하세요! <strong>JustKode</strong> 입니다. 오늘은 <code class=\"language-text\">java.lang</code> 패키지에 있는 <strong>System Class</strong>에 대해서 알아 보겠습니다. 일단 <code class=\"language-text\">java.lang</code> 패키지에 대해서 설명 드리자면, <strong>Java 프로그래밍에 사용 되는 가장 기본적인 Class들을 모아놓은 패키지</strong>로, <code class=\"language-text\">import</code>를 하지 않아도 사용 가능 합니다. <strong>System Class</strong>는 <strong>JVM</strong>을 거쳐 운영체제의 일부 기능을 사용 할 수 있도록 도와주는 클래스입니다. 또한, <strong>System Class</strong>는 모든 메서드가 <strong>Static</strong>으로 이루어져 있는 클래스로, 객체 생성 없이 모든 메서드를 사용 할 수 있습니다.</p>\n<p>일단 간단한 <strong>Hello World</strong>를 한 번 출력 해 볼까요? 이 또한, <strong>System Class</strong>를 이용 하여 출력 할 수 있습니다. <code class=\"language-text\">System</code>의 멤버변수 <code class=\"language-text\">out</code>을 이용해 <code class=\"language-text\">PrintStream</code> 객체를 받아, <strong>출력</strong>을 할 수 있습니다. <code class=\"language-text\">System.out.println()</code>을 이용하여 한 줄 출력이 가능 합니다.</p>\n<blockquote>\n<p>Main.java</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Hello World<span class=\"token operator\">!</span></code></pre></div>\n<h3>System.out</h3>\n<p>먼저 <code class=\"language-text\">System.out</code>에 대해 알아 보겠습니다. <code class=\"language-text\">System.out</code>은 다음과 같이, <code class=\"language-text\">java.io.PrintStream</code> 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// .getClass().getName()을 통해 클래스 이름을 알 수 있습니다.</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">java.io.PrintStream</code></pre></div>\n<p><code class=\"language-text\">java.io.PrintStream</code>... <strong>Stream</strong>.. 어디서 본 것 같다면, 정답입니다. 우리가 <strong>C++</strong>에서도 <code class=\"language-text\">InputStream</code>, <code class=\"language-text\">OutputStream</code>, <code class=\"language-text\">FileStream</code>을 다뤘 듯이, <strong>Java</strong> 또한, <code class=\"language-text\">InputStream</code>, <code class=\"language-text\">PrintStream</code>, <code class=\"language-text\">FileInputStream</code>, <code class=\"language-text\">FileOutputStream</code> 개념이 존재 합니다. <strong>C++</strong>의 <code class=\"language-text\">cout</code> 역할을 하는 것이 <strong>Java</strong>에서의 <code class=\"language-text\">PrintStream</code> 입니다.</p>\n<p>그럼 <code class=\"language-text\">PrintStream</code>의 메서드들을 알아 볼까요?</p>\n<ul>\n<li><code class=\"language-text\">public void print(Object obj)</code>: 파라미터로 들어간 값을 <strong>개행 없이 출력</strong> 합니다. 각 객체의 타입의 맞게 <strong>Overloading</strong> 되어 있습니다.</li>\n<li><code class=\"language-text\">public void println(Object obj)</code>: 파라미터로 들어간 값을 <strong>개행과 함께 출력</strong> 합니다. 각 객체의 타입의 맞게 <strong>Overloading</strong> 되어 있습니다.</li>\n<li><code class=\"language-text\">public void printf(Object format, Object... args)</code>: 첫 번째 파라미터로 들어간 <strong>포맷에 맞게</strong>, 다른 파라미터들을 <strong>포멧에 맞게 출력</strong>합니다.</li>\n<li><code class=\"language-text\">public void format(Object format, Object... args)</code>: 첫 번째 파라미터로 들어간 <strong>포맷에 맞게</strong>, 다른 파라미터들을 <strong>포멧에 맞게 출력</strong>합니다. <code class=\"language-text\">printf</code>와 같습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I am %d Years old.%n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My GPA is %.1f%n\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.313</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">Hello World?Hello World!\nI am 24 Years old.\nMy GPA is 4.3</code></pre></div>\n<h3>System.in</h3>\n<p><code class=\"language-text\">System.in</code>은 <code class=\"language-text\">java.io.BufferedInputStream</code> 객체를 가집니다. <strong>C++</strong>의 <code class=\"language-text\">InputStream</code>과 일치 합니다. 입력을 담당하는 객체입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// .getClass().getName()을 통해 클래스 이름을 알 수 있습니다.</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">java.io.BufferedInputStream</code></pre></div>\n<p>그럼 우리는 <code class=\"language-text\">System.in</code>을 이용하여, 어떻게 데이터를 입력 받을 수 있을까요? 우리는 <code class=\"language-text\">Scanner</code> 객체를 이용하여 입력을 받을 수 있습니다. <code class=\"language-text\">Scanner</code> Class는 <code class=\"language-text\">import java.util.*;</code>을 이용하여 <code class=\"language-text\">import</code> 할 수 있습니다. 그 다음 <code class=\"language-text\">new Scanner(System.in)</code>을 이용하여, <code class=\"language-text\">Scanner</code> 객체를 할당 받습니다. </p>\n<p>만약, 사용자에게 정수 입력을 받고자 한다면, <code class=\"language-text\">Scanner.nextline()</code>을 이용, 사용자의 입력을 <code class=\"language-text\">String</code>으로 입력 받은 후, <code class=\"language-text\">Integer.parseInt(string)</code>을 이용하여, <code class=\"language-text\">int</code>로 변환 합니다. 실수 라면, <code class=\"language-text\">Float.parseFloat(string)</code>을 이용 하여 <code class=\"language-text\">float</code>으로 변환 하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2021년 기준, 당신의 나이는..?: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> input <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"당신의 나이는 %d살 이군요!%n\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"그러면.. 당신은, %d년에 태어 났군요!\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2021</span> <span class=\"token operator\">-</span> age <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">2021년 기준, 당신의 나이는..?: 24\n당신의 나이는 24살 이군요!\n그러면.. 당신은, 1998년에 태어 났군요!</code></pre></div>\n<h4>try, catch 추가</h4>\n<p><code class=\"language-text\">try</code>, <code class=\"language-text\">catch</code>를 추가하여, 오류에 대한 예외도 간단하게 추가 할 수 있겠죠? <code class=\"language-text\">parseInt</code>, <code class=\"language-text\">parseFloat</code>에 대한 에러는 <code class=\"language-text\">NumberFormatException</code>을 이용 하면 됩니다. 예외 처리에 관련 한 내용은 나중에 더 다뤄 볼게요!</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2021년 기준, 당신의 나이는..?: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span> input <span class=\"token operator\">=</span> scanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"당신의 나이는 %d살 이군요!%n\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"그러면.. 당신은, %d년에 태어 났군요!\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2021</span> <span class=\"token operator\">-</span> age <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"입력이 올바르지 않습니다. 정수를 입력 해 주세요!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">2021년 기준, 당신의 나이는..?: asdf\n입력이 올바르지 않습니다. 정수를 입력 해 주세요!</code></pre></div>\n<h4>Scanner.next()</h4>\n<p><code class=\"language-text\">Scanner.next()</code>를 이용하여 <strong>공백을 기준</strong>으로 입력을 받을 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">Scanner</span> scanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"당신의 생년월일은? (띄어쓰기로 구분 해 주세요): \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> year <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> month <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">int</span> day <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>scanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"당신의 생년월일은 %d년 %d월 %d일 이군요!%n\"</span><span class=\"token punctuation\">,</span> year<span class=\"token punctuation\">,</span> month<span class=\"token punctuation\">,</span> day<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NumberFormatException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"입력이 올바르지 않습니다. 정수를 입력 해 주세요!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">당신의 생년월일은? (띄어쓰기로 구분 해 주세요): 1998 7 15\n당신의 생년월일은 1998년 7월 15일 이군요!</code></pre></div>\n<h3>System Methods</h3>\n<p>다음은 <code class=\"language-text\">System</code> 객체 내부의 메서드에 대해서 알아 보겠습니다.</p>\n<ul>\n<li><code class=\"language-text\">static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)</code>: <code class=\"language-text\">src</code> 배열의 <code class=\"language-text\">srcPos</code> 부터 <code class=\"language-text\">srcPos + length</code> 까지의 요소들을 <code class=\"language-text\">dest</code> 배열의 <code class=\"language-text\">destPos</code> 부터 <code class=\"language-text\">destPos + length</code> 까지 대입 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">arraycopy</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr2<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">1, 2, 3, 4, 5,</code></pre></div>\n<ul>\n<li><code class=\"language-text\">static long currentTimeMills()</code>: 1970년 1월 1일 자정 부터의 지금 까지의 시간을 밀리초로 반환 합니다.</li>\n<li><code class=\"language-text\">static void gc()</code>: 가비지 컬렉션을 실행 합니다.</li>\n<li><code class=\"language-text\">static Properties getPropertys()</code>: 시스템 환경변수 테이블을 가져 옵니다.</li>\n<li><code class=\"language-text\">static String getProperty(String key)</code>: 시스템 환경변수 테이블의 <code class=\"language-text\">key</code>에 해당하는 <code class=\"language-text\">value</code>를 반환 합니다.</li>\n<li><code class=\"language-text\">static void setProperty(String key, String value)</code>: 시스템 환경변수 테이블의 <code class=\"language-text\">key</code>에 <code class=\"language-text\">value</code>를 할당 합니다.</li>\n<li><code class=\"language-text\">static void exit(int status)</code>: <code class=\"language-text\">status</code> 값을 반환하고, 프로그램을 종료 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">SimpleDateFormat</span> format <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleDateFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Date Format, 추후 설명.</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"현재 시각은: \"</span> <span class=\"token operator\">+</span> format<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">10000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">gc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sun.jnu.encoding: \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sun.jnu.encoding\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Author\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JustKode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Author: \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Author\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">현재 시각은: 2021-12-22 17:07:50\n{Property Table 출력은 생략}\nsun.jnu.encoding: UTF-8\nAuthor: JustKode\n\nProcess finished with exit code 1</code></pre></div>\n<h3>마치며</h3>\n<p>오늘은 <code class=\"language-text\">System</code> 클래스에 대해서 알아 보았습니다. 다음 시간에는 <strong>Java에서의 객체지향 프로그래밍</strong>에 대해서 알아 보도록 하겠습니다.</p>","id":"e1b89ed7-138a-5e78-b43c-51be401aed68","frontmatter":{"date":"2021-12-22","path":"/java/cpp-to-java-1","title":"[C++ to Java] 1. System Class","tags":["Java"],"keyword":"Java, c++ to java, java system, java system class, system class","summary":"System Class에 대해 알아보자.","img":"/post_image/cpp-to-java/01-01.png","series":"C++ to Java"}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"6861ec31-c681-53af-a75b-dd7da4cf707c","excerpt":"OOP in Java 안녕하세요! JustKode 입니다. 사실 제목까지 이렇게 분리 하고, 이렇게 이야기 하기도 뭐한게, Java는 Object-Oriented Programming을 위해 태어난 언어이고, 안에서 OOP를 하는 것은 당연한 이야기 이기 때문입니다. 우리는 이번 시간에 Java의 OOP에 대해, C++과 비교하여 제대로 짚고 넘어 가고자 합니다. Pass by Value, Pass by Reference 일단, C…","frontmatter":{"date":"2021-12-23","tags":["Java"],"path":"/java/cpp-to-java-2","title":"[C++ to Java] 2. Object-Oriented Programming","img":"/post_image/cpp-to-java/02-01.png","summary":"Java에서의 OOP에 대해 알아보자."}}},{"node":{"id":"e1b89ed7-138a-5e78-b43c-51be401aed68","excerpt":"Hello World! 안녕하세요! JustKode 입니다. 오늘은  패키지에 있는 System Class에 대해서 알아 보겠습니다. 일단  패키지에 대해서 설명 드리자면, Java 프로그래밍에 사용 되는 가장 기본적인 Class들을 모아놓은 패키지로, 를 하지 않아도 사용 가능 합니다. System Class는 JVM을 거쳐 운영체제의 일부 기능을 사용 할 수 있도록 도와주는 클래스입니다. 또한, System Class…","frontmatter":{"date":"2021-12-22","tags":["Java"],"path":"/java/cpp-to-java-1","title":"[C++ to Java] 1. System Class","img":"/post_image/cpp-to-java/01-01.png","summary":"System Class에 대해 알아보자."}}},{"node":{"id":"3c1880a7-ded3-5495-be73-6bf25d2854bf","excerpt":"C++ to Java 안녕하세요! JustKode 입니다. 살다 보면, 아니 한국에서 개발자로 살다보면 생각 보다, Java를 해야 할 일이 많습니다. Android, Spring, Hadoop, Spark 등, 여러 곳에서 자바는 사용 됩니다. 대부분의 컴퓨터공학과 학생들은 학교 프로그래밍 기초 시간에, C/C++을 많이 배우게 됩니다. 저 같은 경우에도 1학년 때 C++로 프로그래밍을 시작 했습니다. C++ 과 Java…","frontmatter":{"date":"2021-12-15","tags":["Java"],"path":"/java/cpp-to-java-0","title":"[C++ to Java] 0. Orientation","img":"/post_image/cpp-to-java/00-01.jpg","summary":"어쩌다 java를 해야 하는 사람들을 위해"}}}]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"6861ec31-c681-53af-a75b-dd7da4cf707c","excerpt":"OOP in Java 안녕하세요! JustKode 입니다. 사실 제목까지 이렇게 분리 하고, 이렇게 이야기 하기도 뭐한게, Java는 Object-Oriented Programming을 위해 태어난 언어이고, 안에서 OOP를 하는 것은 당연한 이야기 이기 때문입니다. 우리는 이번 시간에 Java의 OOP에 대해, C++과 비교하여 제대로 짚고 넘어 가고자 합니다. Pass by Value, Pass by Reference 일단, C…","frontmatter":{"date":"2021-12-23","tags":["Java"],"path":"/java/cpp-to-java-2","title":"[C++ to Java] 2. Object-Oriented Programming","img":"/post_image/cpp-to-java/02-01.png","summary":"Java에서의 OOP에 대해 알아보자."}}},{"node":{"id":"e1b89ed7-138a-5e78-b43c-51be401aed68","excerpt":"Hello World! 안녕하세요! JustKode 입니다. 오늘은  패키지에 있는 System Class에 대해서 알아 보겠습니다. 일단  패키지에 대해서 설명 드리자면, Java 프로그래밍에 사용 되는 가장 기본적인 Class들을 모아놓은 패키지로, 를 하지 않아도 사용 가능 합니다. System Class는 JVM을 거쳐 운영체제의 일부 기능을 사용 할 수 있도록 도와주는 클래스입니다. 또한, System Class…","frontmatter":{"date":"2021-12-22","tags":["Java"],"path":"/java/cpp-to-java-1","title":"[C++ to Java] 1. System Class","img":"/post_image/cpp-to-java/01-01.png","summary":"System Class에 대해 알아보자."}}},{"node":{"id":"3c1880a7-ded3-5495-be73-6bf25d2854bf","excerpt":"C++ to Java 안녕하세요! JustKode 입니다. 살다 보면, 아니 한국에서 개발자로 살다보면 생각 보다, Java를 해야 할 일이 많습니다. Android, Spring, Hadoop, Spark 등, 여러 곳에서 자바는 사용 됩니다. 대부분의 컴퓨터공학과 학생들은 학교 프로그래밍 기초 시간에, C/C++을 많이 배우게 됩니다. 저 같은 경우에도 1학년 때 C++로 프로그래밍을 시작 했습니다. C++ 과 Java…","frontmatter":{"date":"2021-12-15","tags":["Java"],"path":"/java/cpp-to-java-0","title":"[C++ to Java] 0. Orientation","img":"/post_image/cpp-to-java/00-01.jpg","summary":"어쩌다 java를 해야 하는 사람들을 위해"}}}]}}}}},"staticQueryHashes":["234633779","63159454"]}