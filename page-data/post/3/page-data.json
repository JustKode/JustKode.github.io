{"componentChunkName":"component---src-layouts-list-layout-tsx","path":"/post/3/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"1c86ed17-74b5-561b-9229-cc74ecbd11d3","excerpt":"Summary Data Engineering이 구체적으로 무엇인지 알아 봅니다. 왜 Data Engineering이 필요 하게 되었는지 알아 봅니다. Data Engineer는 팀 혹은 회사에서 어떤 역할을 수행 하는지 알아 봅니다. 머릿말 안녕하세요? JustKode, 박민재입니다. 오늘은 Data Engineering이 구체적으로 무엇 인지, Data Engineer…","frontmatter":{"date":"2023-12-05","tags":["Data-Engineering"],"path":"/data-engineering/data-engineering-intro","title":"Data Engineering이란?","img":"/post_image/data-engineering-intro.png","summary":"Data Engineering에 대하여"}}},{"node":{"id":"e4d8d6bf-2f58-5ff8-b46f-c47daed191dd","excerpt":"오늘은 Spark 성능 튜닝에서 가장 중요한 SQL Tuning에 대해서 알아 보도록 하겠습니다. 사실 파라미터(Shuffle Partition 갯수, Executor Instance, Core, Memory 조정) 튜닝 또한, 도움이 될 수 있겠습니다만, 그 전에 Execution Plan이 잘 짜여져 있지 않다면, 파라미터 튜닝이 큰 영향을 주지는 못할 것 입니다. What is Execution Plan? Exection Plan…","frontmatter":{"date":"2023-08-22","tags":["Data-Engineering"],"path":"/data-engineering/spark-performance-tuning-3","title":"Spark 성능 튜닝 - 3. Spark SQL Tuning","img":"/post_image/thumbnail/spark-performance-tuning-3.jpeg","summary":"Spark의 쿼리를 튜닝 해 보자"}}},{"node":{"id":"421a1e99-3193-5d20-9ddc-9f12389e1d4c","excerpt":"안녕하세요? 오늘은 속성 기반 테스트에 대해서 알아 보도록 하겠습니다. 기존 테스트 방식의 문제점 기존 테스트 방식인 예제 기반 테스트(Example-Based Test…","frontmatter":{"date":"2023-05-29","tags":["Computer-Science"],"path":"/computer-science/property-based-test","title":"속성 기반 테스트","img":"/post_image/thumbnail/property-based-test.png","summary":"기존 테스트를 보완하는, 속성 기반 테스트를 알아보자."}}},{"node":{"id":"6466dd9e-f217-5113-909a-150f27b482f3","excerpt":"오늘은 Spark 성능 튜닝에 필요한, 와  에 대해서 알아 보도록 하겠습니다. RDD는 Transformation (ex: , ,  등)을 이용 하여 새로운 RDD를 만들 수 있습니다. 하지만, Action (ex: , ,  등)이 호출 되기 전까지는, 실제 연산을 수행 하지 않죠. 다음 예제를 함께 봅시다! 하지만, 우리가 다음과 같은 상황을 가정해 보죠. 만약, 동일하게 Transformation 된 RDD에 대해, 여러 개의 Action…","frontmatter":{"date":"2023-05-24","tags":["Data-Engineering"],"path":"/data-engineering/spark-performance-tuning-2","title":"Spark 성능 튜닝 - 2. cache(), persist(), unpersist()","img":"/post_image/thumbnail/spark-performance-tuning-2.jpeg","summary":"Spark의 Performance 튜닝을 수행 해 보자."}}},{"node":{"id":"57fa8df1-f97c-53f9-9052-9fa247efb2da","excerpt":"안녕하세요? 오늘은 HDFS의 Architecture에 대해서 알아 보도록 하겠습니다. Hadoop Distributed File System(HDFS) 는 상용 하드웨어에서 동작하게 만든 오픈소스 SW입니다. 장애 발생에 강하며, 저비용 하드웨어 안에서도, 잘 작동 하게 설계 되었습니다. 또한, 많은 데이터 셋을 지닌 어플리케이션에 적합하며, 높은 throughput을 가지고 있습니다. Assumptions and Goals HDFS…","frontmatter":{"date":"2023-05-16","tags":["Data-Engineering"],"path":"/data-engineering/hdfs-architecture","title":"HDFS Architectrue","img":"/post_image/thumbnail/hdfs-architecture.png","summary":"HDFS의 구조에 대해서 알아보자."}}},{"node":{"id":"900d112f-9ad2-52a1-99f9-d2106ddec93b","excerpt":"안녕하세요? 오늘은 Spark Structured Streaming에 대해서 알아 보도록 하겠습니다. Spark Structured Streaming이란? Spark Structured Streaming은, Spark SQL (Dataset/DataFrame) 엔진 기반의, 확장 가능하고, 내결함성이 있는 Stream Processing Engine 입니다. 이는 Batch 작업에서 구조화된 데이터를 처리 하는 것 처럼, Streaming…","frontmatter":{"date":"2023-05-13","tags":["Data-Engineering"],"path":"/data-engineering/spark-structured-streaming","title":"Spark Structured Streaming이란?","img":"/post_image/thumbnail/spark-structured-streaming.png","summary":"Spark로 Streaming Job을 수행 해 보자."}}}]}},"pageContext":{"title":"Posts","description":"전체 게시글 목록입니다.","img":"/post_background.jpg","url":"post","imagePosition":"center bottom","keyword":"전체 글","filter":{"frontmatter":{"title":{"ne":""},"tags":{"nin":["Archive"]}}},"limit":6,"skip":12,"numPages":8,"currentPage":3}},"staticQueryHashes":["3819017183","63159454"],"slicesMap":{}}