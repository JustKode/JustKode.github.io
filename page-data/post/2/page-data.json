{"componentChunkName":"component---src-layouts-list-layout-tsx","path":"/post/2/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"3a543178-c1c9-5cfb-9c9e-b89aed5e8ead","excerpt":"안녕하세요? 오늘은 Kubernetes 환경에 JupyterHub를 설치 하는 방법에 대해서 알아 보도록 하겠습니다. Kubernetes Kubernetes는 컨테이너를 쉽고 빠르게 배포/확장하고 관리를 자동화해주는 Container Orchestration Tool 입니다. Kubernetes 시스템을 통해, 다음을 제공 받을 수 있습니다. 서비스 디스커버리와 로드 밸런싱: DNS 이름, 혹은 자체 IP…","frontmatter":{"date":"2023-03-25","tags":["Data-Engineering","Cloud-Computing"],"path":"/data-engineering/jupyterhub-on-k8s","title":"Jupyterhub on Kubernetes","img":"/post_image/thumbnail/jupyterhub-on-k8s.jpg","summary":"Jupyterhub를 Kubernetes Cluster에서 실행 해 보자."}}},{"node":{"id":"6108ea9c-22bb-5693-995b-aebd5cfb3bcf","excerpt":"Spark Apache Spark는 기존 Hadoop의 MapReduce 형태의 클러스터 컴퓨팅의 단점을 보완하기 위해 탄생한 프레임워크 입니다. 기존 하둡의 MapReduce에서는 Disk에서 데이터를 읽은 후, Mapping, Shuffling, Reducing의 과정을 거쳐서, 다시 Disk에 저장하는 형식으로 진행 되는데요, 이는 Disk I/O가 자주 발생 하기 때문에, 속도가 상대적으로 느리다는 단점이 있습니다. 하지만 Apache…","frontmatter":{"date":"2023-03-06","tags":["Data-Engineering","Cloud-Computing"],"path":"/data-engineering/spark-on-k8s-1","title":"Spark on Kubernetes - Concept","img":"/post_image/thumbnail/spark-on-k8s-1.jpeg","summary":"Spark를 Kubernetes Cluster에서 동작 시켜 보자."}}},{"node":{"id":"34be9b95-e9e6-53a7-8ede-597c7cf7f032","excerpt":"머릿말 안녕하세요? JustKode입니다. 오늘은 Data Engineering에 대해서 알아 보고자 합니다. 이 글을 쓰는 이유는 제가 어쩌다 보니 Data Engineer으로 취업 하게 되어서 인데요. 사실 저는 3학년 때는 랩실에서 AI 대학원을 준비 했으나, 적성에 안맞아서 다른 길을 선택 하기로 마음 먹었고, 4학년 1학기에는 Server Engineer가 되기 위해서 공부 했는데, 회사 쪽에서는 Data Engineering…","frontmatter":{"date":"2022-12-15","tags":["Data-Engineering"],"path":"/data-engineering/what-is-data-engineering","title":"Data Engineering 이란?","img":"/post_image/what-is-data-engineering.jpeg","summary":"의미있는 데이터를 뽑아내는 기술들에 대하여."}}},{"node":{"id":"024f077c-5aae-5764-8e40-6332996a656e","excerpt":"SOLID 원칙 SOLID 원칙은 객체지향 설계에서 지켜줘야 하는 5가지 원칙을 의미 합니다. 우리는 협업을 하면서, 많은 어려움을 봉착 합니다. 분명 기능 1개만 수정 한다고 특정 컴포넌트의 코드를 몇 가지 수정했는데, 이와 연관된 여러 개의 컴포넌트에서 오류를 뱉어 버리는 경우는 개발을 해보신 분들이라면 많이 경험해 봤을 것이라고 생각해요. SRP(Single Responsibility Principle…","frontmatter":{"date":"2022-02-14","tags":["Java"],"path":"/java/solid-pattern","title":"객체지향 개발의 5대 원리, SOLID","img":"/post_image/thumbnail/solid-pattern.jpeg","summary":"객체지향 개발의 5대 원리, SOLID에 대해 알아보자."}}},{"node":{"id":"8e597aee-d5a7-5b8e-98bb-5e90921a69a5","excerpt":"Java Stream…","frontmatter":{"date":"2022-01-31","tags":["Java"],"path":"/java/cpp-to-java-10","title":"[C++ to Java] 10. Stream","img":"/post_image/cpp-to-java/10-01.jpeg","summary":"Java Stream에 대해 알아보자."}}},{"node":{"id":"2616ed81-b682-57eb-b686-405eb08fdcb7","excerpt":"Generic, Enum, Lambda 안녕하세요? 오늘은 중요하지만, 한 번에 다루기에 애매했던 토픽들에 대해서 배워 보고자 합니다. Generic Generic은 C++ 에서의 Template와 같은 역할을 합니다. 타입 변수를 받아, 이에 맞는 지네릭 클래스를 만들 수 있습니다. 문법은 **C…","frontmatter":{"date":"2022-01-26","tags":["Java"],"path":"/java/cpp-to-java-9","title":"[C++ to Java] 9. Generic, Enum, Lambda","img":"/post_image/cpp-to-java/09-01.jpeg","summary":"여태 다루지 못한 것들에 대해 한번 다뤄보자."}}}]}},"pageContext":{"title":"Posts","description":"전체 게시글 목록입니다.","img":"/post_background.jpg","url":"post","imagePosition":"center bottom","keyword":"전체 글","filter":{"frontmatter":{"title":{"ne":""}}},"limit":6,"skip":6,"numPages":12,"currentPage":2}},"staticQueryHashes":["2876327880","63159454"],"slicesMap":{}}