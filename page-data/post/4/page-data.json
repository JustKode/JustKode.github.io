{"componentChunkName":"component---src-layouts-post-list-layout-tsx","path":"/post/4","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"acd42cdf-d686-5b6c-8ea9-026ddb59704c","excerpt":"밑 예제 들은 으로 작성 되었습니다. 나름 짧은 서론 거두절미 하고 이야기 하면, 비트마스크는 알고리즘 이라기 보단 테크닉에 가깝습니다. 비트는 컴퓨터에서 다루는 최소 단위이며, 정수를 이진수로 표현, 비트 연산을 통해 문제를 해결해 나가는 기술을 비트마스크 라고 합니다. 예를 들어 보겠습니다. 10개의 스위치가 있다고 가정하고, 우리는 이 10개의 스위치 상태를 표현 하고 싶습니다! 당연히 스위치는 on/off…","frontmatter":{"date":"2020-06-16","tags":["Algorithm"],"path":"/algorithm/bitmash","title":"비트마스크(bitmask)란 무엇인가?","img":"https://images3.memedroid.com/images/UPLOADED428/591a94aecec53.jpeg","summary":"bit 연산을 이용한 소소한 테크닉"}}},{"node":{"id":"c4e88f21-45c2-5afa-aa92-8e953640c859","excerpt":"…","frontmatter":{"date":"2020-06-13","tags":["Machine-Learning","Python"],"path":"/machine-learning/linear_model","title":"Python으로 알아보는 선형 회귀","img":"https://miro.medium.com/max/683/1*h6PuI6-PdPE8d4dTnhcg3w.png","summary":"scikit-learn으로 알아보는 Linear Regression"}}},{"node":{"id":"287c8638-584e-5b23-b45c-839c8d22f061","excerpt":"최단 경로 알고리즘은 지하철 노선도, 네비게이션 등 다방면에 사용되는 알고리즘입니다. 이번 시간에는 Python을 이용해 하나의 시작 정점으로 부터 모든 다른 정점까지의 최단 경로를 찾는 최단 경로 알고리즘인 다익스트라(dijkstra…","frontmatter":{"date":"2020-05-31","tags":["Python","Algorithm"],"path":"/algorithm/python-dijkstra","title":"Python으로 다익스트라(dijkstra) 알고리즘 구현하기","img":"https://ever-line.co.kr/images/use-1-2_img.png","summary":"최단 경로를 찾아보자"}}},{"node":{"id":"61aab158-40d7-5e3a-a092-7bdbede557b4","excerpt":"우리가 가공한 데이터들을  객체에 녹여 내는 것을 성공 했다고 치겠습니다! 이를 바로  등으로 변환하여 학습을 시도 하면 어떻게 될까요? 만약 feature마다 범위가 1-100, 0-1000…","frontmatter":{"date":"2020-05-03","tags":["Data-Science","Python"],"path":"/data-science/pandas-normalization","title":"Pandas에서 데이터 정규화 하기","img":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTQU34oEynvWRbC1FvDCWj8Rn16cCqypKf8q9LKbI0i1SLWtU9e&usqp=CAU","summary":"데이터 전처리 방법 중 하나인 정규화"}}},{"node":{"id":"259f4003-67ff-541b-bb4f-b5e93039634d","excerpt":"에서 모델의 가중치를 저장하기 위해선 3가지 함수만 알면 충분 합니다. : 객체를 디스크에 저장합니다.  모듈을 이용하여 객체를 직렬화 하며, 이 함수를 사용하여 모든 종류의 모델, Tensor 등을 저장할 수 있습니다. :  모듈을 이용하여 객체를 역직렬화하여 메모리에 할당합니다. : 역직렬화된 state_dict를 사용, 모델의 매개변수들을 불러옵니다. state_dict는 간단히 말해 각 체층을 매개변수 Tensor로 매핑한 Python…","frontmatter":{"date":"2020-04-26","tags":["Deep-Learning","Python"],"path":"/deep-learning/pytorch-save","title":"Pytorch에서 학습한 모델 저장 및 불러오기","img":"/post_image/pytorch-save.png","summary":"Pytorch 모델을 저장하고, 불러와 보기"}}},{"node":{"id":"23d37dd6-e403-5e90-8cf5-724d65b2e29b","excerpt":"…","frontmatter":{"date":"2020-04-21","tags":["Python"],"path":"/python/try-except","title":"Python에서 try, except, raise로 예외 처리 하기.","img":"https://media.makeameme.org/created/exceptions-exceptions-everywhere-snh6tb.jpg","summary":"Python에서의 예외 처리 방법"}}}]}},"pageContext":{"limit":6,"skip":18,"numPages":6,"currentPage":4}},"staticQueryHashes":["234633779","63159454"]}