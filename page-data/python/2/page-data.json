{"componentChunkName":"component---src-layouts-list-layout-tsx","path":"/python/2","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"98bb08f1-d946-5bcf-9b18-597adf26abb2","excerpt":"저번 시간에는 선형 회귀에 대해서 배워 보았습니다. 선형 회귀는 차원의 벡터 독립 변수 가 존재한다고 가정 하면, 그에 따른 종속 변수  가 있다고 가정하여, 선형 상관 관계를 모델링 하는 것이라고 배웠습니다. 예시 코드를 보겠습니다. 하지만, 범주형 변수에 대해서 생각을 해 보겠습니다. 예를 들어, 50점 이상이면 합격, 이하면 불합격이고, 이를 합격일 시 1로, 불합격일 시…","frontmatter":{"date":"2020-07-16","tags":["Machine-Learning","Python"],"path":"/machine-learning/logistic-regression","title":"수식과 코드로 알아보는 로지스틱 회귀","img":"/post_image/logistic.png","summary":"수식과 코드로 통해 보는 Logistic Regression"}}},{"node":{"id":"2323bf5e-f178-5fad-8ed2-20fc197a3ec2","excerpt":"이번 시간에는 Python 시각화 라이브러리인 matplotlib을 이용해, 간단하게 데이터를 시각화 하는 예제 코드를 알아보는 시간을 가져 보겠습니다. 해당 포스트는 ratsgo님의 게시글를 참고하여, 데이터 및 주석 등을 재구성한 포스트임을 알립니다. 가장 먼저 와 을 import 합니다. 꺾은 선 그래프 막대 그래프 히스토그램 선 그래프 산점도 히트맵 마치며 지금까지 matplotlib…","frontmatter":{"date":"2020-07-11","tags":["Data-Science","Python"],"path":"/data-science/matplotlib-summary","title":"matplotlib으로 하는 데이터 시각화 예제 정리","img":"/post_image/thumbnail/matplotlib-summary.PNG","summary":"데이터 분석에 필수적인 데이터 시각화"}}},{"node":{"id":"2603c31c-7201-5598-905e-63d1e1773b0b","excerpt":"저번 시간에는 Flask-RESTX 에 대한 기본적인 사용 법을 알아보고, 이를 이용하여 간단한 API Server를 만들어 보았습니다. 모두가 스파게티 코드를 원하지 않잖아요. 여러분은 당신의 코드가 스파게티 코드가 되는 것을 원치 않을 것 입니다. 그러므로 파일 분리는 우리가 무슨 어플리케이션을 만들던 필수적인 과정입니다. 저번 시간에 구현한 간단한 API…","frontmatter":{"date":"2020-07-09","tags":["Python"],"path":"/python/flask-restapi-2","title":"Flask로 REST API 구현하기 - 2. 파일 분리, 문서화","img":"/post_image/flask-restx-2.jpg","summary":"flask-restx의 파일 분리와 문서화"}}},{"node":{"id":"b1a4bdb2-d45b-58f9-b92e-bf10c3469777","excerpt":"이번 시간에는 Flask로 간단히 REST API를 주고 받는 API Server를 만들어 보겠습니다. Flask란? Flask는 Python 기반의 Micro Web Framework 입니다. 배우기 쉽고, 간단한 코드 구현과 자유도가 높다는 점이 장점입니다. 왜 Flask로 API Server를 구현하나요? Flask는 현실적으로 서버의 Application단을 구현 한다기 보단 API Server…","frontmatter":{"date":"2020-07-06","tags":["Python"],"path":"/python/flask-restapi-1","title":"Flask로 REST API 구현하기 - 1. Flask-RESTX","img":"https://cdn-images-1.medium.com/proxy/1*3UaLDKs6bJRMtYoPDCIWBw.png","summary":"Flask로 쉽게 REST API 만들기"}}},{"node":{"id":"d5fb23f4-9496-5c46-8f72-465e83032167","excerpt":"…","frontmatter":{"date":"2020-06-13","tags":["Machine-Learning","Python"],"path":"/machine-learning/linear_model","title":"Python으로 알아보는 선형 회귀","img":"https://miro.medium.com/max/683/1*h6PuI6-PdPE8d4dTnhcg3w.png","summary":"scikit-learn으로 알아보는 Linear Regression"}}},{"node":{"id":"1695e5c9-2a5b-5127-bab2-c195d594440c","excerpt":"최단 경로 알고리즘은 지하철 노선도, 네비게이션 등 다방면에 사용되는 알고리즘입니다. 이번 시간에는 Python을 이용해 하나의 시작 정점으로 부터 모든 다른 정점까지의 최단 경로를 찾는 최단 경로 알고리즘인 다익스트라(dijkstra…","frontmatter":{"date":"2020-05-31","tags":["Python","Algorithm"],"path":"/algorithm/python-dijkstra","title":"Python으로 다익스트라(dijkstra) 알고리즘 구현하기","img":"/post_image/img_subway.png","summary":"최단 경로를 찾아보자"}}}]}},"pageContext":{"title":"Python","description":"Life is short, You need Python.","img":"/python_background.jpg","url":"python","imagePosition":"center","keyword":"python, 파이썬, Python","filter":{"frontmatter":{"tags":{"in":["Python"]}}},"limit":6,"skip":6,"numPages":4,"currentPage":2}},"staticQueryHashes":["234633779","63159454"]}