{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/data-science/sql-summary","result":{"data":{"markdownRemark":{"html":"<h1>SQL 문법 정리</h1>\n<p>이 글은 <code class=\"language-text\">SQL</code> 할 줄은 아는데, <strong>문법을 자주 까먹는 사람들</strong> (예를 들어, 저 같은), 혹은 <strong>SQL을 안한지 오래된 사람들</strong>을 위해 만든 문서입니다. 기본적인 <code class=\"language-text\">SQL</code> 지식을 필요로 합니다. 해당 포스트는 <code class=\"language-text\">JOIN</code>문을 다루지 않았습니다. <code class=\"language-text\">JOIN</code>문을 정리 한 포스트는 다음에 올리겠습니다. 일단 <code class=\"language-text\">SQL</code> 기본 문법을 복습하는 느낌으로 해당 포스트를 읽으시면 될 것 같습니다. 한 번 가물가물했던 <code class=\"language-text\">SQL</code>에 대한 내용들을 복습 해 볼까요?</p>\n<p align=\"center\">\n\t<img src=\"https://image.flaticon.com/icons/svg/29/29165.svg\" width=\"150px\"/>\n</p>\n<h2>목차</h2>\n<ul>\n<li>CREATE</li>\n<li>ALTER</li>\n<li>DROP</li>\n<li>INSERT</li>\n<li>UPDATE</li>\n<li>DELETE</li>\n<li>SELECT</li>\n</ul>\n<h2>CREATE</h2>\n<h3>DATABASE 생성</h3>\n<p><code class=\"language-text\">CREATE DATABASE</code> 문은 말 그대로, <code class=\"language-text\">DATABASE</code>를 생성하기 위한 구문입니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">DB</code>라는 이름을 가지는 <code class=\"language-text\">DATABASE</code>를 생성하는 예제입니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> DB<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>DATABASE 선택</h3>\n<p><code class=\"language-text\">USE</code>문을 이용, <code class=\"language-text\">DATABASE</code>를 선택 할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">USE</span> 데이터베이스명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">DB</code>라는 <code class=\"language-text\">DATABASE</code>를 사용 하는 예제입니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">USE</span> DB<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>DATABASE의 TABLE 생성</h3>\n<p><code class=\"language-text\">USE</code>문을 이용하여, <code class=\"language-text\">DATABASE</code>를 선택 한 이후, 해당 <code class=\"language-text\">DATABASE</code>에서 <code class=\"language-text\">TABLE</code>을 생성 할 수 있습니다. <code class=\"language-text\">CREATE TABLE</code>문을 이용합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 테이블명 <span class=\"token punctuation\">(</span>\n\t필드명_1 타입_1<span class=\"token punctuation\">,</span>\n\t필드명_2 타입_2<span class=\"token punctuation\">,</span>\n\t필드명_3 타입_3<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">CREATE TABLE</code>문을 이용하여, <code class=\"language-text\">PLAYER</code> 테이블을 생성하는 예제입니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tPOSITION <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tAGE <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tGOAL <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tASSIST <span class=\"token keyword\">INT</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Constraint: 제약 조건</h3>\n<p>각 필드에 <strong>제약 조건</strong>을 걸 수 있습니다. </p>\n<p><code class=\"language-text\">NOT NULL</code> : 해당 필드는 <code class=\"language-text\">NULL</code> 값이 불가능 합니다.\n<code class=\"language-text\">UNIQUE</code> : 해당 필드의 값은 테이블 내 해당 필드에서 유일해야 합니다.\n<code class=\"language-text\">PRIMARY KEY</code> : 해당 필드는 <code class=\"language-text\">NOT NULL</code>과 <code class=\"language-text\">UNIQUE</code> 제약 조건의 특징을 모두 가집니다.\n<code class=\"language-text\">FOREIGN KEY</code> : 해당 필드는 다른 테이블의 특정 필드 값과 일치해야 합니다.\n<code class=\"language-text\">DEFAULT</code> : 해당 필드는 기본값을 가집니다.</p>\n<p><code class=\"language-text\">CREATE TABLE</code> 문을 작성하는 과정에서도 사용 가능합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 테이블명 <span class=\"token punctuation\">(</span>\n\t필드명_1 타입_1 제약조건_1<span class=\"token punctuation\">,</span>\n\t필드명_2 타입_2 제약조건_2<span class=\"token punctuation\">,</span>\n\t필드명_3 타입_3 제약조건_3<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">CREATE TABLE</code>문을 이용하여, 필드에 적절한 <strong>제약 조건이 들어간</strong> <code class=\"language-text\">PLAYER</code> 테이블과 <code class=\"language-text\">TEAM</code> 테이블을 생성하는 예제입니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> TEAM <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tCOUNTRY <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">\"Korea\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tPOSITION <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tCOUNTRY <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">\"Korea\"</span><span class=\"token punctuation\">,</span>\n\tAGE <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tGOAL <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\tASSIST <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    TEAM <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>TEAM<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">REFERENCES</span> TEAM <span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>ALTER</h2>\n<p><code class=\"language-text\">ALTER</code> 문을 이용해 <code class=\"language-text\">TABLE</code>의 <strong>필드 수정</strong> 혹은 <code class=\"language-text\">DATABASE</code>의 <strong>문자 집합 및 콜레이션을 수정</strong> 할 수 있습니다.</p>\n<h3>ALTER DATABASE</h3>\n<p><code class=\"language-text\">ALTER DATABASE</code>를 통해 <code class=\"language-text\">DATABASE</code>의 <code class=\"language-text\">CHARACTER SET</code>, <code class=\"language-text\">COLLATE</code>를 수정 할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명 <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span><span class=\"token operator\">=</span>문자집합이름<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>콜레이션이름<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">DB</code> 데이터베이스에 범용적으로 사용하는 <code class=\"language-text\">utf8</code> 문자 집합과 <code class=\"language-text\">utf8_general_ci</code> 콜렉션을 사용해 보겠습니다.\n<strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DATABASE</span> DB <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span><span class=\"token operator\">=</span>uft8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_general_ci<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>ALTER TABLE</h3>\n<p><code class=\"language-text\">ALTER TABLE</code>을 통해 <code class=\"language-text\">TABLE</code>의 필드들의 <strong>타입, 제약조건 수정</strong> 혹은 <strong>필드 추가 및 삭제</strong> 할 수 있습니다.</p>\n<ul>\n<li>추가: <code class=\"language-text\">ADD</code></li>\n<li>삭제: <code class=\"language-text\">DROP</code></li>\n<li>수정: <code class=\"language-text\">MODIFY COLUMN</code></li>\n</ul>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 테이블이름 <span class=\"token keyword\">ADD</span> 필드명 필드타입<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 테이블이름 <span class=\"token keyword\">DROP</span> 필드명<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 테이블이름 <span class=\"token keyword\">MODIFY</span> <span class=\"token keyword\">COLUMN</span> 필드명 필드타입<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">ALTER TABLE</code>을 이용하여, <code class=\"language-text\">PLAYER</code> 테이블에 <code class=\"language-text\">ADD</code>로 필드를 추가하고, <code class=\"language-text\">DROP</code>으로 필드를 제거하고, <code class=\"language-text\">MODIFY COLUMN</code>으로 제약조건을 추가해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token keyword\">ADD</span> RATING <span class=\"token keyword\">FLOAT</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0.00</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token keyword\">DROP</span> COUNTRY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token keyword\">MODIFY</span> <span class=\"token keyword\">COLUMN</span> AGE <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>DROP</h2>\n<p><code class=\"language-text\">DROP</code>을 이용해 <code class=\"language-text\">DATABASE</code>나 <code class=\"language-text\">TABLE</code>을 <strong>삭제</strong> 할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> 테이블명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>한번 <code class=\"language-text\">PLAYER</code> 테이블과 <code class=\"language-text\">DB</code> 데이터베이스를 삭제 시켜 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> PLAYER<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">DATABASE</span> DB<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>TRUNCATE TABLE</h3>\n<p><code class=\"language-text\">TRUNCATE TABLE</code>문은 테이블 내의 스키마는 남겨놓고, <strong>테이블 내의 데이터 만을 지우고자 할 때</strong> 사용합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">TRUNCATE</span> <span class=\"token keyword\">TABLE</span> 테이블명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">TRUNCATE</span> <span class=\"token keyword\">TABLE</span> PLAYER<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>INSERT</h2>\n<p><code class=\"language-text\">INSERT INTO</code>문은 데이터를 <strong>삽입</strong>할 때 사용합니다. <code class=\"language-text\">VALUES</code>에 삽입 하려고 하는 데이터 들을 입력 하면 됩니다. <strong>복수 입력</strong> 또한 가능합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 테이블명<span class=\"token punctuation\">(</span>필드명_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token punctuation\">,</span> 필드명_3<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>필드값_1<span class=\"token punctuation\">,</span> 필드값_2<span class=\"token punctuation\">,</span> 필드값_3<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>필드값_1<span class=\"token punctuation\">,</span> 필드값_2<span class=\"token punctuation\">,</span> 필드값_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 <strong>Tottenham Hotspur</strong> 을 추가 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> TEAM<span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">,</span> NAME<span class=\"token punctuation\">,</span> COUNTRY<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Tottenham Hotspur\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"England\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>UPDATE</h2>\n<p><code class=\"language-text\">UPDATE</code>문을 이용하여 데이터를 <strong>수정</strong>할 수 있습니다. <code class=\"language-text\">UPDATE</code>문으로 <code class=\"language-text\">TABLE</code>을 선택하고, <code class=\"language-text\">SET</code>문으로 원하는 데이터를 <strong>설정</strong>한 후, <code class=\"language-text\">WHERE</code>문으로 데이터 수정을 원하는 행을 <strong>선택</strong>할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> 테이블명\n<span class=\"token keyword\">SET</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">WHERE</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 넣어 놓은 <strong>Tottenham Hotspur</strong>의 이름을 <strong>토트넘 핫스퍼</strong>으로 수정 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> TEAM\n<span class=\"token keyword\">SET</span> NAME<span class=\"token operator\">=</span><span class=\"token string\">\"토트넘 핫스퍼\"</span>\n<span class=\"token keyword\">WHERE</span> NAME<span class=\"token operator\">=</span><span class=\"token string\">\"Tottenham Hotspur\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>DELETE</h2>\n<p><code class=\"language-text\">DELETE</code>문을 이용하여 데이터를 <strong>삭제</strong>할 수 있습니다. <code class=\"language-text\">DELETE FROM</code>문으로 <code class=\"language-text\">TABLE</code>을 선택하고, <code class=\"language-text\">WHERE</code>문으로 데이터 삭제를 원하는 행을 <strong>선택</strong>할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> 테이블명\n<span class=\"token keyword\">WHERE</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 넣어 놓은 <strong>토트넘 핫스퍼</strong>를 삭제 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> TEAM\n<span class=\"token keyword\">WHERE</span> NAME<span class=\"token operator\">=</span><span class=\"token string\">\"토트넘 핫스퍼\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>SELECT</h2>\n<p><code class=\"language-text\">SELECT</code>문을 이용하여 데이터를 <strong>조회</strong>할 수 있습니다. <code class=\"language-text\">SELECT</code>문으로 보고 싶은 필드를 선택하고, <code class=\"language-text\">FROM</code>문으로 <code class=\"language-text\">TABLE</code>을 선택한 후, <code class=\"language-text\">WHERE</code>문으로 조회 하고 싶어 하는 행을 선택 할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 필드명_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">FROM</span> 테이블명\n<span class=\"token keyword\">WHERE</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 있는 데이터 중, <code class=\"language-text\">COUNTRY</code>가 <strong>Korea</strong>인 행만 조회 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> TEAM\n<span class=\"token keyword\">WHERE</span> COUNTRY<span class=\"token operator\">=</span><span class=\"token string\">\"Korea\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://tcpschool.com/\">TCPSchool</a></li>\n</ul>","id":"487b8208-aed3-5354-b792-459702ad9b2c","frontmatter":{"date":"2020-03-29","path":"/data-science/sql-summary","title":"SQL 간단 문법 정리","tags":["Data-Science"],"keyword":"SQL, MySQL","summary":"SQL이 가물가물한 사람들을 위해","img":"https://miro.medium.com/max/2484/1*kvNT3lYmtg-U0v-NXHuuUA.jpeg","series":null}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"8f3afaf6-caa7-551d-83c8-ae041e547105","excerpt":"…","frontmatter":{"date":"2020-08-01","tags":["Data-Science"],"path":"/data-science/regex-1","title":"정규 표현식(RegEx)을 이해 해보자!","img":"https://www.onely.com/wp-content/uploads/blog/2017/principles-regular-expressions-seo/003-picard-now-i-have-two-problems.jpg","summary":"이제는 이해하고, 사용해보자!"}}},{"node":{"id":"8f7e3a51-065e-5f6d-9639-5d8d1d96205e","excerpt":"이번 시간에는 Python 시각화 라이브러리인 matplotlib을 이용해, 간단하게 데이터를 시각화 하는 예제 코드를 알아보는 시간을 가져 보겠습니다. 해당 포스트는 ratsgo님의 게시글를 참고하여, 데이터 및 주석 등을 재구성한 포스트임을 알립니다. 가장 먼저 와 을 import 합니다. 꺾은 선 그래프 막대 그래프 히스토그램 선 그래프 산점도 히트맵 마치며 지금까지 matplotlib…","frontmatter":{"date":"2020-07-11","tags":["Data-Science","Python"],"path":"/data-science/matplotlib-summary","title":"matplotlib으로 하는 데이터 시각화 예제 정리","img":"/post_image/thumbnail/matplotlib-summary.PNG","summary":"데이터 분석에 필수적인 데이터 시각화"}}},{"node":{"id":"29546be3-1a03-54d6-9b13-9d89593d3d63","excerpt":"우리가 가공한 데이터들을  객체에 녹여 내는 것을 성공 했다고 치겠습니다! 이를 바로  등으로 변환하여 학습을 시도 하면 어떻게 될까요? 만약 feature마다 범위가 1-100, 0-1000…","frontmatter":{"date":"2020-05-03","tags":["Data-Science","Python"],"path":"/data-science/pandas-normalization","title":"Pandas에서 데이터 정규화 하기","img":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTQU34oEynvWRbC1FvDCWj8Rn16cCqypKf8q9LKbI0i1SLWtU9e&usqp=CAU","summary":"데이터 전처리 방법 중 하나인 정규화"}}},{"node":{"id":"487b8208-aed3-5354-b792-459702ad9b2c","excerpt":"SQL 문법 정리 이 글은  할 줄은 아는데, 문법을 자주 까먹는 사람들 (예를 들어, 저 같은), 혹은 SQL을 안한지 오래된 사람들을 위해 만든 문서입니다. 기본적인  지식을 필요로 합니다. 해당 포스트는 문을 다루지 않았습니다. 문을 정리 한 포스트는 다음에 올리겠습니다. 일단  기본 문법을 복습하는 느낌으로 해당 포스트를 읽으시면 될 것 같습니다. 한 번 가물가물했던 에 대한 내용들을 복습 해 볼까요? 목차 CREATE ALTER…","frontmatter":{"date":"2020-03-29","tags":["Data-Science"],"path":"/data-science/sql-summary","title":"SQL 간단 문법 정리","img":"https://miro.medium.com/max/2484/1*kvNT3lYmtg-U0v-NXHuuUA.jpeg","summary":"SQL이 가물가물한 사람들을 위해"}}}]}}}}}}