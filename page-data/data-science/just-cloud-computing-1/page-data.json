{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/data-science/just-cloud-computing-1","result":{"data":{"markdownRemark":{"html":"<h2>AWS EC2</h2>\n<p>안녕하세요? <strong>Justkode</strong> 입니다. 이번 시간에는 <strong>AWS EC2</strong>에 대해서 알아 보고, <strong>AWS EC2 인스턴스</strong>를 만들어 보는 시간을 가져 보도록 하겠습니다.</p>\n<p>저번 시간에 재혁이네 헬스장 이야기를 했었죠? 간단하게 이야기 하자면, 연초에 핫한 헬스장에 사람들이 몰려 헬스를 할 자리가 없다면, 사장을 <strong>어차피 곧 빠질 사람들</strong>이니 헬스 기구를 <strong>새로 사지 않고, 빌리는 것</strong>이 돈을 아낄 수 있다는 지름길이라는 것이라고 이야기 했습니다.</p>\n<p>그럼 <strong>컴퓨팅 서버</strong>는 어떻게 빌릴 수 있을 까요? 이는 <strong>AWS EC2</strong> 서비스를 이용하면 됩니다. <strong>AWS EC2</strong>는 <strong>IaaS</strong>의 대표격이라고 볼 수 있는데요, 간단하게 작은 서버 컴퓨터를 네트워크를 통해 빌린다고 생각하면 편할 것 같습니다. 우리가 네트워크와 스토리지가 구성된 서버를 OS만 선택하여 우리가 편히게 사용할 수 있게 끔 <strong>그저 이용만 하면 되는 구조</strong>입니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-01.png\" width=\"40%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tAWS EC2\n\t</p>\n</p>\n<h2>EC2의 Instance 종류</h2>\n<p>일단 <strong>EC2</strong>를 사용하기 전에 <strong>Instance</strong> 종류에 대해서 알 필요가 있습니다. 우리가 서버를 사용할 때는 <strong>특정한 목적</strong>이 있습니다. 머신러닝과 같은 <strong>많은 연산 작업</strong>을 원하는 경우가 있을 수도 있고, <strong>많은 데이터의 저장</strong>을 원하는 경우, <strong>소규모 웹서버</strong>를 운영 하는 경우가 있을 수도 있습니다. 우리는 우리가 사용 용도에 맞는 인스턴스를 사용하면 됩니다. </p>\n<p>먼저 <strong>인스턴스 패밀리</strong>에 대해서 표로 보여드리겠습니다. <strong>인스턴스 패밀리</strong>는 같은 용도와 비슷한 성능의 밸런스를 가진 인스턴스 유형을 묶은 것이라고 생각하면 됩니다.</p>\n<table>\n<thead>\n<tr>\n<th>인스턴스 패밀리</th>\n<th>설명</th>\n<th>사용 사례</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>T3, T2, M5, M5A, M4</td>\n<td>범용, 밸런스 잡힌 성능</td>\n<td>웹 사이트, 애플리케이션</td>\n</tr>\n<tr>\n<td>C3, C4, C5</td>\n<td>컴퓨팅 최적화, 높은 CPU 성능</td>\n<td>배치 처리, 웹 서버, 비디오 인코딩</td>\n</tr>\n<tr>\n<td>G3, P2, P3</td>\n<td>GPU 최적화, 높은 GPU 성능</td>\n<td>기계 학습, 3D 작업</td>\n</tr>\n<tr>\n<td>R5, R4, X1e, X1</td>\n<td>메모리 최적화, 큰 RAM 용량</td>\n<td>In-Memory DB, 데이터 마이닝</td>\n</tr>\n<tr>\n<td>I3, I3EN, H1</td>\n<td>스토리지 최적화, 높은 디스크 처리량</td>\n<td>데이터 웨어하우징, 분산처리DB</td>\n</tr>\n</tbody>\n</table>\n<p>그 다음 <strong>인스턴스 세대</strong>는 높을 수록 최신, 좋은 성능을 가지며, <strong>인스턴스 크기</strong>는 말 그대로 같은 <strong>인스턴스 세대</strong>에서의 <strong>상대적인 크기</strong>를 나타 냅니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-02.jpg\" width=\"40%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t종류\n\t</p>\n</p>\n<h2>EC2 Instance를 만들어 보자!</h2>\n<p>그럼 EC2 Instance를 만들어 볼까요? 우선, <a href=\"https://portal.aws.amazon.com/billing/signup#/start\">AWS 계정을 생성</a> 한 후, <a href=\"https://aws.amazon.com/ko/console/\">AWS Management Console</a> 에 로그인 합니다.</p>\n<p>그럼 이렇게 <strong>AWS Console DashBoard</strong>가 나오게 됩니다. 우측 상단의 리전이 서울로 되어 있지 않다면, 서울로 선택해 주세요. 첫 번째로 EC2 서비스를 검색 창에서 검색 한 후 들어가 봅니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-03.jpg\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tEC2를 클릭 해 줍니다.\n\t</p>\n</p>\n<p>이렇게 들어가면 EC2 전체 대시 보드를 볼수가 있습니다. 저는 지금 1개의 Instance를 실행 중인 상태이네요. 일단 가장 먼저 해야할 일은 <strong>Instance</strong>를 만드는 일이겠죠? 한 번 좌측 하단에 있는, 인스턴스 시작을 눌러 보겠습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-04.jpg\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t인스턴스 시작을 클릭 해 줍니다.\n\t</p>\n</p>\n<p>그러면 이렇게 기본 <strong>Amazon Machine Image (AMI)</strong>를 선택하는 창이 나오게 되는데요, 원하는 <strong>운영체제</strong>에 맞게 선택 하시면 됩니다. 저는 Ubuntu Server 20.04로 하겠습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-05.jpg\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t인스턴스 시작을 클릭 해 줍니다.\n\t</p>\n</p>\n<p>다음 단계에서는 인스턴스 유형을 고를 수가 있는데요, 아까 언급했던 <strong>Instance의 사용 목적에 맞게</strong> 원하는 유형을 선택하면 되겠습니다. 선택 하셨으면, 다음: 인스턴스 세부 정보 구성으로 가 보겠습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-06.jpg\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t원하는 인스턴스 유형을 선택 해 주세요.\n\t</p>\n</p>\n<p>여기서는 인스턴스의 세부 정보들을 구성할 수 있는데요, 우리가 주로 사용 할 요소들에 대해서 설명을 해 드리겠습니다.</p>\n<ul>\n<li>인스턴스 개수: 한 번에 동일한 구성의 인스턴스를 몇 개 생성할 지 결정 합니다.</li>\n<li>구매 옵션(스팟 인스턴스 요청): AWS에서 현재 수요가 없는 인스턴스를 저렴하게 사용 할 수 있는 옵션입니다. 하지만, 다른 곳에서 On-Demend 수요가 발생하면 종료 됩니다. 자세한 내용은 <a href=\"https://sa-na.tistory.com/entry/AWS-%EB%B9%84%EC%9A%A9%EC%A4%84%EC%9D%B4%EA%B8%B0-%EC%8A%A4%ED%8C%9F-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%82%AC%EC%9A%A9\">해당 링크</a> 에서 확인 하세요.</li>\n<li>네트워크: VPC (Virtual Private Cloud)를 설정 할 수 있습니다. 가상의 Private한 네트워크 망을 구축 할 수 있습니다. 자세한 내용은 <a href=\"https://medium.com/harrythegreat/aws-%EA%B0%80%EC%9E%A5%EC%89%BD%EA%B2%8C-vpc-%EA%B0%9C%EB%85%90%EC%9E%A1%EA%B8%B0-71eef95a7098\">해당 링크</a>를 참조 하세요.</li>\n<li>서브넷: VPC와 관련 된 설정으로, VPC내의 서브넷을 설정 할 수 있습니다.</li>\n<li>IAM 역할: IAM (Identity and Access Management) 설정에 따라서 인스턴스에 대한 Access 권한을 설정 합니다.</li>\n</ul>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-07.jpg\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t어이고 많아라.\n\t</p>\n</p>\n<p>그 다음으로 넘어갑니다. 여기서는 원하는 만큼 추가 EBS 스토리지를 추가 할 수 있습니다. <strong>EBS(Elastic Block Store)</strong> 에 대해서 설명 하자면, <strong>EC2</strong>에서 사용하는 외장하드라고 생각하면 편합니다. 이를 <strong>EC2 Instance</strong>에 <strong>Mount</strong>하여 사용 할 수 있습니다. 여기에 있는 정보들은 <strong>EC2 Instance</strong>가 종료 되더라도, 사용자가 지우지 않는 이상 영구보존이 가능 합니다. 이에 대해서는 나중에 설명을 드리겠습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-08.png\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t굳이 건들고 싶지 않으면 넘어가면 됩니다.\n\t</p>\n</p>\n<p>그 다음으로 넘어가면, <strong>태그</strong>를 설정 할 수 있습니다. 태그 추가를 누르면 Key-Value 쌍을 입력 할 수 있습니다. 나중에 <strong>인스턴스를 구분 또는 검색</strong> 할 때 많이 사용합니다. 볼륨-인스턴스 모두에 적용 할 수 있습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-09.png\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t왼쪽 아래의 태그 추가를 통해 추가할 수 있습니다.\n\t</p>\n</p>\n<p>여기서는 <strong>보안 그룹</strong>을 선택 할 수 있습니다. 특정 포트에 대해, <strong>어떤 IP에 대한 접근만을 허용</strong> 할 것인지, 서브넷 마스크를 이용하여 지정 해 줄 수 있고, 혹은, 기존에 개인적으로 만들어 놓은 <strong>보안 그룹</strong>을 선택 할 수도 있습니다. 기본적으로 SSH는 22번을 사용 하며, 웹서버는 80, FTP는 443 등을 사용합니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-10.png\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t보안 그룹 세팅 화면\n\t</p>\n</p>\n<p>마지막으로, <strong>최종 검토</strong>를 한 후 인스턴스를 만들 수 있습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-11.png\" width=\"90%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t최종 검토 화면\n\t</p>\n</p>\n<p>검토를 마치고 실행을 하려고 하니, <strong>키 페어</strong>를 만들라고 합니다. <strong>키 페어</strong>에 대해서 간단하게 설명 하자면, 인스턴스에 접근 하기 위한 <strong>열쇠</strong> 라고 생각하면 됩니다. 우리가 만약 SSH로 인스턴스에 접속을 하려고 한다면, <strong>Instance를 만들때 지정 한 키 페어 파일</strong>을 가지고 있어야 접속이 가능 합니다.</p>\n<p>새 키페어 생성을 선택 하시고, <strong>키 페어</strong> 이름을 선택 한 후, 키 페어 다운로드를 클릭하여, <strong>키 페어</strong>를 다운로드 받아 줍니다. <strong>절대 키 페어가 임의로 삭제 되는 일이 없도록 조심하셔야 합니다.</strong></p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-12.png\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t새 키페어 생성\n\t</p>\n</p>\n<p>이 과정이 완료 되면, 자동으로 <strong>인스턴스 대시보드</strong>로 이동이 되고, <strong>인스턴스</strong>가 만들어 진 모습을 볼 수가 있습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-13.png\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t새 키페어 생성\n\t</p>\n</p>\n<h2>Elastic IP</h2>\n<p>이제 <strong>EC2 Instance</strong>에 접속 해 볼 시간 입니다! 그 전에! 일단 <strong>Instance</strong>에 대해서 <strong>IP</strong>를 할당 해 주어야 합니다. 물론, 기본적으로 인스턴드 마다 할당 되어 있는 IP가 있지만, 이는 인스턴스를 껐다 켰다 하게 되면 <strong>변동</strong> 될 수 있기 때문이죠, 그렇기 때문에 <strong>고정 할 수 있는 IP</strong>를 할당 하여야 합니다. 좌측 메뉴를 보면 <strong>네트워크 및 보안 > 탄력적 IP</strong> 라는 메뉴가 있습니다. 한 번 클릭 해 보겠습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-14.png\" width=\"40%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t탄력적 IP 클릭\n\t</p>\n</p>\n<p>그러면, <strong>탄력적 IP</strong>에 대한 대시 보드가 나오게 됩니다. 우측 상단의 <strong>탄력적 IP 주소 할당</strong>을 클릭 합니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-15.png\" width=\"40%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t탄력적 IP 클릭\n\t</p>\n</p>\n<p>할당 하고 싶은 원하는 리전을 네트워크 선택 그룹에 입력하고, (서울의 경우는 ap-northeast-2) <strong>할당</strong>을 클릭 해 주세요.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-16.png\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t할당 클릭\n\t</p>\n</p>\n<p>할당이 완료 되었으면, <strong>탄력적 IP에 대한 대시 보드</strong>에 새롭게 할당 된 IP를 클릭하고, <strong>작업 > 탄력적 IP 주소 연결</strong>을 클릭 해 줍니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-17.png\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t탄력적 IP 주소 연결 클릭\n\t</p>\n</p>\n<p>그 다음 창에서, 연결 하고자 하는 Instance를 입력하고, <strong>연결</strong>을 누르게 되면, 인스턴스와 IP가 연결 되게 됩니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-18.png\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t연결 클릭\n\t</p>\n</p>\n<h2>AWS EC2 Instance 접속</h2>\n<p>자, 이제 돌고 돌아, 드디어 접속 할 시간입니다. cmd 혹은 터미널 창을 킨 이후, 아까 다운로드 한 <strong>키 페어</strong>가 있는 폴더 위에서 다음 코드를 실행 합니다.</p>\n<p><strong>ubuntu 기준</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">ssh ubuntu@인스턴스IP -i 키페어명.pem</code></pre></div>\n<p><strong>Amazon Linux 기준</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">ssh ec2-user@인스턴스IP -i 키페어명.pem</code></pre></div>\n<p>이렇게 입력하면 접속이 된 것을 확인 할 수 있습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-19.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t연결 클릭\n\t</p>\n</p>\n<p>자 이제, 서버 혹은 개인 서비스를 올리고, 이러한 인스턴스를 여러 개로 만들고 싶을 때는 어떻게 해야 할까요? 그럴때는 <strong>커스텀 AMI</strong>를 생성하면 됩니다. 생성 방법은 다음과 같습니다. 첫 번째로 <strong>인스턴스를 중지</strong> 합니다. (종료 아님), 그 다음 <strong>이미지 및 템플릿 > 이미지 생성</strong>을 클릭 합니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-20.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t이미지 생성 클릭\n\t</p>\n</p>\n<p>여기서 이름과 설명을 입력 해 준 후, 이미지 생성을 누르면 됩니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-21.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t연결 클릭\n\t</p>\n</p>\n<p>조금만 기다리신 후에, 그 다음 새 인스턴스를 생성 하는 창에서 다음을 확인 할 수 있습니다. 단계 1에서 <strong>나의 AMI</strong>를 선택하면, 작업했던 볼륨 그대로를 사용하여, 새로운 인스턴스를 만들 수 있습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-22.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t내가 방금 만든 AMI가 있는 모습을 볼 수 있다.\n\t</p>\n</p>\n<h2>AWS EC2 EBS 사용하기</h2>\n<p><strong>Elastic Block Store > 볼륨 > 볼륨 생성</strong>에 들어 가서 <strong>EBS 볼륨</strong>을 생성 할 수 있습니다. <strong>특정 시점에 대한 스냅샷</strong> 또한 지정 해 줄 수 있습니다. 이는 <strong>Elastic Block Store > 스냅샷 > 스냅샷 생성</strong>에서 볼륨, 혹은 Instance에 대해 생성 할 수 있습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-23.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t볼륨 생성 창\n\t</p>\n</p>\n<p>생성 후, 볼륨 > 볼륨 연결을 클릭하여, 인스턴스를 선택 하고, 디바이스(경로)를 선택 합니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-24.jpg\" width=\"40%\"/>\n\t<img src=\"/post_image/just-cloud-computing/01-25.jpg\" width=\"40%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t볼륨 생성 창\n\t</p>\n</p>\n<p>그 다음으로는 다음 사진에 있는 명령어를 <strong>EC2 Instance</strong>에 입력 함으로써 연결이 가능합니다. <strong>참고: 위에 입력된 디바이스 이름(세부 정보에 표시됨)이 /dev/sdf ~ /dev/sdp여도 최신 Linux 커널로 인해 디바이스 이름이 내부적으로 /dev/xvdf ~ /dev/xvdp로 바뀔 수 있습니다.</strong> </p>\n<p align=\"center\">\n\t<img src=\"/post_image/just-cloud-computing/01-26.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\t볼륨 마운트\n\t</p>\n</p>\n<h2>마치며</h2>\n<p>이렇게 <strong>EC2</strong>에 대해서 가볍게 알아 보았고, 같이 자주 사용되는 <strong>EBS</strong>, <strong>AMI</strong>에 대해서도 알아 보았습니다. 다음 시간에는 스토리지 서비스인 <strong>AWS S3</strong>에 대해서도 알아 보는 시간을 가져 보겠습니다.</p>","id":"6d07a863-48c0-53cd-bdab-d84d12decbb5","frontmatter":{"date":"2021-07-06","path":"/data-science/just-cloud-computing-1","title":"[찍먹 Cloud Computing] 1. AWS EC2란? / AWS EC2 인스턴스 만들기","tags":["Cloud-Computing"],"keyword":"Cloud Computing, AWS, EC2, AWS EC2","summary":"AWS EC2 인스턴스를 만들어 보자.","img":"/post_image/thumbnail/just-cloud-computing-1.jpg","series":"찍먹 Cloud Computing"}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"6d07a863-48c0-53cd-bdab-d84d12decbb5","excerpt":"AWS EC2 안녕하세요? Justkode 입니다. 이번 시간에는 AWS EC2에 대해서 알아 보고, AWS EC…","frontmatter":{"date":"2021-07-06","tags":["Cloud-Computing"],"path":"/data-science/just-cloud-computing-1","title":"[찍먹 Cloud Computing] 1. AWS EC2란? / AWS EC2 인스턴스 만들기","img":"/post_image/thumbnail/just-cloud-computing-1.jpg","summary":"AWS EC2 인스턴스를 만들어 보자."}}},{"node":{"id":"c24ca4c0-8a9f-5ec8-963f-f7e849a7ca06","excerpt":"Cloud Computing? 안녕하세요? Justkode 입니다. Cloud Computing…","frontmatter":{"date":"2021-06-25","tags":["Cloud-Computing"],"path":"/data-science/just-cloud-computing-0","title":"[찍먹 Cloud Computing] 0. Orientation","img":"/post_image/thumbnail/just-cloud-computing-0.jpg","summary":"Cloud Computing을 찍먹해 보자."}}}]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"6d07a863-48c0-53cd-bdab-d84d12decbb5","excerpt":"AWS EC2 안녕하세요? Justkode 입니다. 이번 시간에는 AWS EC2에 대해서 알아 보고, AWS EC…","frontmatter":{"date":"2021-07-06","tags":["Cloud-Computing"],"path":"/data-science/just-cloud-computing-1","title":"[찍먹 Cloud Computing] 1. AWS EC2란? / AWS EC2 인스턴스 만들기","img":"/post_image/thumbnail/just-cloud-computing-1.jpg","summary":"AWS EC2 인스턴스를 만들어 보자."}}},{"node":{"id":"c24ca4c0-8a9f-5ec8-963f-f7e849a7ca06","excerpt":"Cloud Computing? 안녕하세요? Justkode 입니다. Cloud Computing…","frontmatter":{"date":"2021-06-25","tags":["Cloud-Computing"],"path":"/data-science/just-cloud-computing-0","title":"[찍먹 Cloud Computing] 0. Orientation","img":"/post_image/thumbnail/just-cloud-computing-0.jpg","summary":"Cloud Computing을 찍먹해 보자."}}},{"node":{"id":"5131916f-cfea-579e-895d-a0cd2ec8830d","excerpt":"Review 지난 시간에는 Docker를 왜 배우는지에 대해 간단하게 알아 보았습니다. OS 커널을 공유 함으로써, 빠른 가상화가 가능하고, 완전한 프로세스 분리가 가능하며, 그 프로세스의 환경을 그대로 재현 함으로써 다른 컴퓨터에서도 오류가 안 뜨게 끔 하는 것이 Docker의 핵심 이라고 이야기 했었죠? 이제 Docker를 진짜 사용해 보는 시간을 가져 보겠습니다! Docker Install Docker 설치법은  Window Install…","frontmatter":{"date":"2021-03-20","tags":["Cloud-Computing"],"path":"/cloud-computing/docker-2","title":"Docker 시리즈 - 2. Docker Basic","img":"/post_image/thumbnail/docker-2.jpg","summary":"도커의 기본 부터 차근차근"}}},{"node":{"id":"c4cb2ec4-3067-5ab8-b247-2e8157c1f653","excerpt":"아 ㅋㅋ 왜 여기선 되는데 거기선 안되는데 여러분들도 많이 경험 해 봤을 이슈입니다. \"아! 왜 여기선 되는데 거기선 터지는거야!\" 한 번 우리가 다른 사람이 작업 한 서버를 구동 할 때, 어떻게 하는지 다시 한번 되세겨 볼까요? 새 컴퓨터에 Node.js 서버를 한번 실행해 본다고 가정 하겠습니다.  Linux를 설치 한다. MySQL, nginx를 설치 한다. Node.js…","frontmatter":{"date":"2020-09-17","tags":["Cloud-Computing"],"path":"/cloud-computing/docker","title":"Docker 시리즈 - 1. 도커, 왜 써요?","img":"/post_image/thumbnail/docker-1.jpg","summary":"도커는 왜 쓰는 거에요?"}}}]}}}}},"staticQueryHashes":["234633779","63159454"]}