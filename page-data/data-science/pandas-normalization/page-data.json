{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/data-science/pandas-normalization","result":{"data":{"markdownRemark":{"html":"<p>우리가 가공한 데이터들을 <code class=\"language-text\">Pandas</code> 객체에 녹여 내는 것을 성공 했다고 치겠습니다! 이를 바로 <code class=\"language-text\">Tensor</code> 등으로 변환하여 학습을 시도 하면 어떻게 될까요? 만약 <strong>feature</strong>마다 범위가 1-100, 0-10000 등 <strong>천차만별</strong>이라면? 역전파를 통해 원하는 기울기가 될 때 까지 오랜시간이 걸리고, 정확도도 정확하지 않을 것 입니다.</p>\n<h3>만약 이런 데이터라면..?</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'C'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped=\"\">\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6076</td>\n      <td>221976</td>\n      <td>58</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6786</td>\n      <td>555048</td>\n      <td>73</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8024</td>\n      <td>79842</td>\n      <td>10</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1926</td>\n      <td>125274</td>\n      <td>76</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1776</td>\n      <td>590684</td>\n      <td>85</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<p>실제 이런 데이터를 테스트 해 본 결과와, 왜 정규화가 필요한 지 자세한 내용들이 궁금하다면, 해당 포스트를 참고 해 주세요.</p>\n<p><a href=\"https://medium.com/@urvashilluniya/why-data-normalization-is-necessary-for-machine-learning-models-681b65a05029\">https://medium.com/@urvashilluniya/why-data-normalization-is-necessary-for-machine-learning-models-681b65a05029</a></p>\n<h2>정규분포를 이용 한 전처리</h2>\n<p>정규 분포 밀도 함수는 다음과 같습니다.</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>Z</mi><mo>=</mo><mi>X</mi><mo>−</mo><mi>μ</mi></mrow><mi>σ</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">Z = X - \\mu \\over \\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.0463299999999998em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603299999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">μ</span></span></span></span>: 평균</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>: 표준 편차</li>\n</ul>\n<p><code class=\"language-text\">DataFrame</code> 객체의 내부 메소드를 이용 하여, <code class=\"language-text\">DataFrame</code> 내의 <strong>평균, 표준 편차</strong>를 구할 수 있습니다.</p>\n<p><code class=\"language-text\">DataFrame.mean()</code>: <code class=\"language-text\">DataFrame</code> 객체 내부 요소들의 <strong>평균</strong>을 반환 한다. 단, <code class=\"language-text\">Column</code> 값에 따라 다르게 적용 한다.\n<code class=\"language-text\">DataFrame.std()</code>: <code class=\"language-text\">DataFrame</code> 객체 내부 요소들의 <strong>표준 편차</strong>를 반환 한다. 단, <code class=\"language-text\">Column</code> 값에 따라 다르게 적용 한다.</p>\n<h3>Code</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">normalization_df <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>df <span class=\"token operator\">-</span> df<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>df<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nnormalization_df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped=\"\">\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.398771</td>\n      <td>-0.893266</td>\n      <td>0.289179</td>\n      <td>-1.564749</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.643429</td>\n      <td>0.253257</td>\n      <td>0.808350</td>\n      <td>-1.222503</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1.070029</td>\n      <td>-1.382529</td>\n      <td>-1.372171</td>\n      <td>0.830973</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>-1.031271</td>\n      <td>-1.226140</td>\n      <td>0.912185</td>\n      <td>1.515465</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-1.082959</td>\n      <td>0.375925</td>\n      <td>1.223688</td>\n      <td>0.146481</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<h2>Min-Max를 이용 한 전처리</h2>\n<p><strong>Min-Max</strong> 정규화의 공식은 다음과 같습니다.</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>X</mi><mo>=</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">X = x - x_{min} \\over x_{max} - x_{min}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.19633em;vertical-align:-0.8360000000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_{min}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">i</span><span class=\"mord mathdefault mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>: 최소 값</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">x_{max}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">m</span><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">x</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>: 최댓 값</li>\n</ul>\n<p>아까 와 같이, <code class=\"language-text\">DataFrame</code> 객체의 내부 메소드를 이용 하여, <code class=\"language-text\">DataFrame</code> 내의 <strong>최소 값, 최댓 값</strong>를 구할 수 있습니다.</p>\n<p><code class=\"language-text\">DataFrame.min()</code>: <code class=\"language-text\">DataFrame</code> 객체 내부 요소들의 <strong>최소 값</strong>을 반환 한다. 단, <code class=\"language-text\">Column</code> 값에 따라 다르게 적용 한다.\n<code class=\"language-text\">DataFrame.max()</code>: <code class=\"language-text\">DataFrame</code> 객체 내부 요소들의 <strong>최댓 값</strong>를 반환 한다. 단, <code class=\"language-text\">Column</code> 값에 따라 다르게 적용 한다.</p>\n<p><strong>주의!</strong>\n데이터에 특이 값(예상 범위를 크게 벗어 난 값)이 있을 경우에는 영향을 받을 수 있습니다.</p>\n<h3>Code</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">normalization_df <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>df <span class=\"token operator\">-</span> df<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>df<span class=\"token punctuation\">.</span>std<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nnormalization_df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div>\n<style scoped=\"\">\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}</code></pre></div>\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>A</th>\n      <th>B</th>\n      <th>C</th>\n      <th>D</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.606085</td>\n      <td>0.221727</td>\n      <td>0.585859</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.677377</td>\n      <td>0.555184</td>\n      <td>0.737374</td>\n      <td>0.111111</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.801687</td>\n      <td>0.079428</td>\n      <td>0.101010</td>\n      <td>0.777778</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.189376</td>\n      <td>0.124913</td>\n      <td>0.767677</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.174315</td>\n      <td>0.590862</td>\n      <td>0.858586</td>\n      <td>0.555556</td>\n    </tr>\n  </tbody>\n</table>\n</div>","id":"61aab158-40d7-5e3a-a092-7bdbede557b4","frontmatter":{"date":"2020-05-03","path":"/data-science/pandas-normalization","title":"Pandas에서 데이터 정규화 하기","tags":["Data-Science","Python"],"keyword":"Pandas, Python Pandas, Python, Normalization, 정규화, Pandas Normalization, 판다스 정규화","summary":"데이터 전처리 방법 중 하나인 정규화","img":"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTQU34oEynvWRbC1FvDCWj8Rn16cCqypKf8q9LKbI0i1SLWtU9e&usqp=CAU","series":null}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"8b853027-d41f-5306-8cb9-8242edaf29c1","excerpt":"Generative Adversarial Network 안녕하세요? 오늘은 GAN, Generative Adversarial Network에 대해서 알아 보도록 하겠습니다. Generative Adversarial Network…","frontmatter":{"date":"2021-08-07","tags":["Data-Science","Deep-Learning"],"path":"/data-science/just-data-science-11","title":"[찍먹 Data Science] 11. Generative Adversarial Network","img":"/post_image/thumbnail/just-data-science-11.jpg","summary":"서로가 적대적으로 학습하는 GAN에 대해서 알아 보자."}}},{"node":{"id":"78aa3994-0aa2-55e7-b6cb-0ebc85c57591","excerpt":"Convolutional Neural Network 안녕하세요? 오늘은 CNN, Convolutional Neural Network에 대해서 알아 보도록 하겠습니다. 저번 시간에는 DNN…","frontmatter":{"date":"2021-07-31","tags":["Data-Science","Deep-Learning"],"path":"/data-science/just-data-science-10","title":"[찍먹 Data Science] 10. Convolutional Neural Network","img":"/post_image/thumbnail/just-data-science-10.jpg","summary":"국소적인 정보를 추출하는 CNN에 대해 알아 보자."}}},{"node":{"id":"e708c84f-fcff-5de6-9204-de9a7569750c","excerpt":"Deep Neural Network 안녕하세요? 오늘은 DNN, Deep Neural Network에 대해서 알아 보도록 하겠습니다. 여태까지 우리는 간단한 선형 모델에 대해서만 학습을 진행 하였습니다.  (혹은 ) 와 같이, 선형 연산을 통해서, 데이터에 대해서 예측하고, 분류 해 보는 실습을 진행 하였습니다. 하지만, 이러한 선형적인 모델이 비선형적인 문제를 해결 하려면 어떻게 해야 할까요? 일단 간단한 예제를 생각 해 보겠습니다. XOR…","frontmatter":{"date":"2021-07-29","tags":["Data-Science","Deep-Learning"],"path":"/data-science/just-data-science-9","title":"[찍먹 Data Science] 9. Deep Neural Network","img":"/post_image/thumbnail/just-data-science-9.jpg","summary":"딥러닝의 기초, DNN에 대해서 알아 보자."}}},{"node":{"id":"a272e5eb-daef-505b-91e4-ddb97a4caf45","excerpt":"Normalization, PCA 안녕하세요? Justkode 입니다. 이번 시간에는 Normalization (정규화)와, 차원 축소를 위한 PCA에 대해 공부 해 보는 시간을 가져 보도록 하겠습니다. 정규화와 차원 축소는 기계 학습에서 중요 한 요소 입니다. 학습에서 직접적인 영향을 주기 때문이죠. Normalization 저번에 Linear Regression의 Cost Function에 대한 미분을 하게 되면, Input Vector…","frontmatter":{"date":"2021-07-25","tags":["Data-Science","Machine-Learning"],"path":"/data-science/just-data-science-8","title":"[찍먹 Data Science] 8. Normalization, PCA","img":"/post_image/thumbnail/just-data-science-8.jpg","summary":"값의 범위를 줄이고, 차원을 효율 적으로 줄여보자."}}}]}}}}},"staticQueryHashes":["234633779","63159454"]}