{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/data-science/just-data-science-4","result":{"data":{"markdownRemark":{"html":"<h2>SQL</h2>\n<p>안녕하세요? <strong>Justkode</strong> 입니다. 오늘은 <strong>SQL</strong>에 대해서 간단하게 알아보는 시간을 가져보도록 하겠습니다. <strong>SQL</strong>은 <strong>Structured Query Language</strong>의 약자로, <strong>RDBMS</strong>의 데이터베이스를 주로 조회 하는데에 사용이 되는, <strong>데이터베이스 관리 시스템(RDBMS)의 데이터를 관리하기 위해 설계</strong>된 특수 목적의 프로그래밍 언어입니다. 여기서 설명 하는 문법들은 많은 내용을 담지 않고, SQL을 간략하게 설명 하기 위해, 간단한 코드 예제를 보여 줄 뿐이니, <a href=\"http://sqlfiddle.com/\">SQL Fiddle</a>을 이용 하여 실제로 연습 하거나, 각 챕터마다 이론을 따로 공부 하는 것을 추천 드립니다.</p>\n<p>(전에 작성 했던 글인 <a href=\"https://justkode.kr/data-science/sql-summary\">SQL 간단 문법 정리</a> 의 수정본이라고 생각하셔도 될 정도로, 중복 되는 내용이 매우 많습니다. 참고 해 주세요.)</p>\n<h2>목차</h2>\n<ul>\n<li>CREATE</li>\n<li>ALTER</li>\n<li>DROP</li>\n<li>INSERT</li>\n<li>UPDATE</li>\n<li>DELETE</li>\n<li>SELECT</li>\n<li>JOIN</li>\n</ul>\n<h2>CREATE</h2>\n<h3>DATABASE 생성</h3>\n<p><code class=\"language-text\">CREATE DATABASE</code> 문은 말 그대로, <code class=\"language-text\">DATABASE</code>를 생성하기 위한 구문입니다. <code class=\"language-text\">DATABASE</code>는 내부에 여러 개의 <code class=\"language-text\">TABLE</code>을 가지고 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">DB</code>라는 이름을 가지는 <code class=\"language-text\">DATABASE</code>를 생성하는 예제입니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> DB<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>DATABASE 선택</h3>\n<p><code class=\"language-text\">USE</code>문을 이용, 사용 하고자 하는 <code class=\"language-text\">DATABASE</code>를 선택 할 수 있습니다. </p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">USE</span> 데이터베이스명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">DB</code>라는 <code class=\"language-text\">DATABASE</code>를 사용 하는 예제입니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">USE</span> DB<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>DATABASE의 TABLE 생성</h3>\n<p><code class=\"language-text\">USE</code>문을 이용하여, <code class=\"language-text\">DATABASE</code>를 선택 한 이후, 해당 <code class=\"language-text\">DATABASE</code>에서 <code class=\"language-text\">TABLE</code>을 생성 할 수 있습니다. <code class=\"language-text\">CREATE TABLE</code>문을 이용합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 테이블명 <span class=\"token punctuation\">(</span>\n\t필드명_1 타입_1<span class=\"token punctuation\">,</span>\n\t필드명_2 타입_2<span class=\"token punctuation\">,</span>\n\t필드명_3 타입_3<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">CREATE TABLE</code>문을 이용하여, <code class=\"language-text\">PLAYER</code> 테이블을 생성하는 예제입니다. 만들어 지는 <code class=\"language-text\">TABLE</code>의 파라미터를 보면 <strong>속성-타입</strong>의 쌍이 있는 것을 볼 수가 있습니다. 이를 통해 속성과 해당 속성의 타입을 지정 해 줄 수 있습니다.</p>\n<p>지정 할 수 있는 타입은 <strong>MySQL, PostgreSQL, Oracle SQL</strong> 등등 여러가지 RDBMS에 따라 다르게 사용 됩니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tPOSITION <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tAGE <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tGOAL <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tASSIST <span class=\"token keyword\">INT</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Constraint: 제약 조건</h3>\n<p>각 필드에 <strong>제약 조건</strong>을 걸 수 있습니다. </p>\n<ul>\n<li><code class=\"language-text\">NOT NULL</code> : 해당 필드는 <code class=\"language-text\">NULL</code> 값이 불가능 합니다.</li>\n<li><code class=\"language-text\">UNIQUE</code> : 해당 필드의 값은 테이블 내 해당 필드에서 유일해야 합니다.</li>\n<li><code class=\"language-text\">PRIMARY KEY</code> : 해당 필드는 <code class=\"language-text\">NOT NULL</code>과 <code class=\"language-text\">UNIQUE</code> 제약 조건의 특징을 모두 가집니다.</li>\n<li><code class=\"language-text\">FOREIGN KEY</code> : 해당 필드는 다른 테이블의 특정 필드 값과 일치해야 합니다.</li>\n<li><code class=\"language-text\">DEFAULT</code> : 해당 필드는 기본값을 가집니다.</li>\n</ul>\n<p><code class=\"language-text\">CREATE TABLE</code> 문을 작성하는 과정에서도 사용 가능합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> 테이블명 <span class=\"token punctuation\">(</span>\n\t필드명_1 타입_1 제약조건_1<span class=\"token punctuation\">,</span>\n\t필드명_2 타입_2 제약조건_2<span class=\"token punctuation\">,</span>\n\t필드명_3 타입_3 제약조건_3<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">CREATE TABLE</code>문을 이용하여, 필드에 적절한 <strong>제약 조건이 들어간</strong> <code class=\"language-text\">PLAYER</code> 테이블과 <code class=\"language-text\">TEAM</code> 테이블을 생성하는 예제입니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> TEAM <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tCOUNTRY <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">\"Korea\"</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tPOSITION <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\tCOUNTRY <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token string\">\"Korea\"</span><span class=\"token punctuation\">,</span>\n\tAGE <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\tGOAL <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\tASSIST <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    TEAM <span class=\"token keyword\">INT</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>TEAM<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">REFERENCES</span> TEAM <span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>ALTER</h2>\n<p><code class=\"language-text\">ALTER</code> 문을 이용해 <code class=\"language-text\">TABLE</code>의 <strong>필드 수정</strong> 혹은 <code class=\"language-text\">DATABASE</code>의 <strong>문자 집합 및 콜레이션을 수정</strong> 할 수 있습니다.</p>\n<h3>ALTER DATABASE</h3>\n<p><code class=\"language-text\">ALTER DATABASE</code>를 통해 <code class=\"language-text\">DATABASE</code>의 <code class=\"language-text\">CHARACTER SET</code>, <code class=\"language-text\">COLLATE</code>를 수정 할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명 <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span><span class=\"token operator\">=</span>문자집합이름<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>콜레이션이름<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">DB</code> 데이터베이스에 범용적으로 사용하는 <code class=\"language-text\">utf8</code> 문자 집합과 <code class=\"language-text\">utf8_general_ci</code> 콜렉션을 사용해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">DATABASE</span> DB <span class=\"token keyword\">CHARACTER</span> <span class=\"token keyword\">SET</span><span class=\"token operator\">=</span>uft8 <span class=\"token keyword\">COLLATE</span><span class=\"token operator\">=</span>utf8_general_ci<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>ALTER TABLE</h3>\n<p><code class=\"language-text\">ALTER TABLE</code>을 통해 <code class=\"language-text\">TABLE</code>의 필드들의 <strong>타입, 제약조건 수정</strong> 혹은 <strong>필드 추가 및 삭제</strong> 할 수 있습니다.</p>\n<ul>\n<li>추가: <code class=\"language-text\">ADD</code></li>\n<li>삭제: <code class=\"language-text\">DROP</code></li>\n<li>수정: <code class=\"language-text\">MODIFY COLUMN</code></li>\n</ul>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 테이블이름 <span class=\"token keyword\">ADD</span> 필드명 필드타입<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 테이블이름 <span class=\"token keyword\">DROP</span> 필드명<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> 테이블이름 <span class=\"token keyword\">MODIFY</span> <span class=\"token keyword\">COLUMN</span> 필드명 필드타입<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">ALTER TABLE</code>을 이용하여, <code class=\"language-text\">PLAYER</code> 테이블에 <code class=\"language-text\">ADD</code>로 필드를 추가하고, <code class=\"language-text\">DROP</code>으로 필드를 제거하고, <code class=\"language-text\">MODIFY COLUMN</code>으로 제약조건을 추가해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token keyword\">ADD</span> RATING <span class=\"token keyword\">FLOAT</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">0.00</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token keyword\">DROP</span> COUNTRY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">TABLE</span> PLAYER <span class=\"token keyword\">MODIFY</span> <span class=\"token keyword\">COLUMN</span> AGE <span class=\"token keyword\">INT</span> <span class=\"token keyword\">DEFAULT</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>DROP</h2>\n<p><code class=\"language-text\">DROP</code>을 이용해 <code class=\"language-text\">DATABASE</code>나 <code class=\"language-text\">TABLE</code>을 <strong>삭제</strong> 할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">DATABASE</span> 데이터베이스명<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> 테이블명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p>한번 <code class=\"language-text\">PLAYER</code> 테이블과 <code class=\"language-text\">DB</code> 데이터베이스를 삭제 시켜 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TABLE</span> PLAYER<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">DROP</span> <span class=\"token keyword\">DATABASE</span> DB<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>TRUNCATE TABLE</h3>\n<p><code class=\"language-text\">TRUNCATE TABLE</code>문은 테이블 내의 스키마는 남겨놓고, <strong>테이블 내의 데이터 만을 지우고자 할 때</strong> 사용합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">TRUNCATE</span> <span class=\"token keyword\">TABLE</span> 테이블명<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">TRUNCATE</span> <span class=\"token keyword\">TABLE</span> PLAYER<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>INSERT</h2>\n<p><code class=\"language-text\">INSERT INTO</code>문은 데이터를 <strong>삽입</strong>할 때 사용합니다. <code class=\"language-text\">VALUES</code>에 삽입 하려고 하는 데이터 들을 입력 하면 됩니다. <strong>복수 입력</strong> 또한 가능합니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 테이블명<span class=\"token punctuation\">(</span>필드명_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token punctuation\">,</span> 필드명_3<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>필드값_1<span class=\"token punctuation\">,</span> 필드값_2<span class=\"token punctuation\">,</span> 필드값_3<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>필드값_1<span class=\"token punctuation\">,</span> 필드값_2<span class=\"token punctuation\">,</span> 필드값_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 <strong>Tottenham Hotspur</strong> 을 추가 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> TEAM<span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">,</span> NAME<span class=\"token punctuation\">,</span> COUNTRY<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Tottenham Hotspur\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"England\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>UPDATE</h2>\n<p><code class=\"language-text\">UPDATE</code>문을 이용하여 데이터를 <strong>수정</strong>할 수 있습니다. <code class=\"language-text\">UPDATE</code>문으로 <code class=\"language-text\">TABLE</code>을 선택하고, <code class=\"language-text\">SET</code>문으로 원하는 데이터를 <strong>설정</strong>한 후, <code class=\"language-text\">WHERE</code>문으로 데이터 수정을 원하는 행을 <strong>선택</strong>할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> 테이블명\n<span class=\"token keyword\">SET</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">WHERE</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 넣어 놓은 <strong>Tottenham Hotspur</strong>의 이름을 <strong>토트넘 핫스퍼</strong>으로 수정 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> TEAM\n<span class=\"token keyword\">SET</span> NAME<span class=\"token operator\">=</span><span class=\"token string\">\"토트넘 핫스퍼\"</span>\n<span class=\"token keyword\">WHERE</span> NAME<span class=\"token operator\">=</span><span class=\"token string\">\"Tottenham Hotspur\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>DELETE</h2>\n<p><code class=\"language-text\">DELETE</code>문을 이용하여 데이터를 <strong>삭제</strong>할 수 있습니다. <code class=\"language-text\">DELETE FROM</code>문으로 <code class=\"language-text\">TABLE</code>을 선택하고, <code class=\"language-text\">WHERE</code>문으로 데이터 삭제를 원하는 행을 <strong>선택</strong>할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> 테이블명\n<span class=\"token keyword\">WHERE</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 넣어 놓은 <strong>토트넘 핫스퍼</strong>를 삭제 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> TEAM\n<span class=\"token keyword\">WHERE</span> NAME<span class=\"token operator\">=</span><span class=\"token string\">\"토트넘 핫스퍼\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>SELECT</h2>\n<p><code class=\"language-text\">SELECT</code>문을 이용하여 데이터를 <strong>조회</strong>할 수 있습니다. <code class=\"language-text\">SELECT</code>문으로 보고 싶은 필드를 선택하고, <code class=\"language-text\">FROM</code>문으로 <code class=\"language-text\">TABLE</code>을 선택한 후, <code class=\"language-text\">WHERE</code>문으로 조회 하고 싶어 하는 행을 선택 할 수 있습니다.</p>\n<p><strong>Syntax</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 필드명_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">FROM</span> 테이블명\n<span class=\"token keyword\">WHERE</span> 필드명_1<span class=\"token operator\">=</span>필드값_1<span class=\"token punctuation\">,</span> 필드명_2<span class=\"token operator\">=</span>필드값_2<span class=\"token punctuation\">;</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">TEAM</code> 테이블에 있는 데이터 중, <code class=\"language-text\">COUNTRY</code>가 <strong>Korea</strong>인 행만 조회 해 보겠습니다.</p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> TEAM\n<span class=\"token keyword\">WHERE</span> COUNTRY<span class=\"token operator\">=</span><span class=\"token string\">\"Korea\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>JOIN</h2>\n<p>예시를 들어 보겠습니다. <code class=\"language-text\">FOREIGN KEY</code> 제약 조건이 존재 하는 <code class=\"language-text\">PEOPLE</code> 테이블과 <code class=\"language-text\">SCHOOL</code> 테이블을 생성하는 예제입니다. </p>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> SCHOOL <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> PEOPLE <span class=\"token punctuation\">(</span>\n\tID <span class=\"token keyword\">INT</span> <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">,</span>\n\tNAME <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n\tAGE <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n    SCHOOL <span class=\"token keyword\">INT</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>SCHOOL<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">REFERENCES</span> SCHOOL <span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SCHOOL<span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">,</span> NAME<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"KyungHee Univ\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"KyungHee High School\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> PEOPLE<span class=\"token punctuation\">(</span>ID<span class=\"token punctuation\">,</span> NAME<span class=\"token punctuation\">,</span> AGE<span class=\"token punctuation\">,</span> SCHOOL<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Justkode\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"JustPark\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>여기에 있는 <code class=\"language-text\">PEOPLE</code>과 <code class=\"language-text\">SCHOOL</code> 에서, <code class=\"language-text\">PEOPLE.SCHOOL</code>과 <code class=\"language-text\">SCHOOL.ID</code> 가 일치 하는 행에 대해 조합하여 하나의 테이블 형태로 출력을 하고자 할 때는, <code class=\"language-text\">INNER JOIN</code>을 사용 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> PEOPLE\n<span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> SCHOOL\n<span class=\"token keyword\">ON</span> SCHOOL<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">=</span> PEOPLE<span class=\"token punctuation\">.</span>SCHOOL<span class=\"token punctuation\">;</span></code></pre></div>\n<p align=\"center\">\n\t<img src=\"/post_image/just-data-science/04-01.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tInner Join\n\t</p>\n</p>\n<h2>LEFT JOIN</h2>\n<p><code class=\"language-text\">LEFT JOIN</code>은 첫 번째 테이블을 기준으로, 두 번째 테이블을 조합하는 <code class=\"language-text\">JOIN</code> 입니다. 첫 번째 테이블에 있는 값을 모두 출력하고, 만약 <code class=\"language-text\">ON</code> 절의 조건을 만족한다면, 두 번째 테이블의 필드 값을 함께 출력 하지만, 만족하지 않을 경우에는 전부 <code class=\"language-text\">NULL</code>로 처리가 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> PEOPLE\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> SCHOOL\n<span class=\"token keyword\">ON</span> SCHOOL<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">=</span> PEOPLE<span class=\"token punctuation\">.</span>SCHOOL<span class=\"token punctuation\">;</span></code></pre></div>\n<p align=\"center\">\n\t<img src=\"/post_image/just-data-science/04-02.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tLeft Join\n\t</p>\n</p>\n<h2>RIGHT JOIN</h2>\n<p><code class=\"language-text\">RIGHT JOIN</code>은 두 번째 테이블을 기준으로, 첫 번째 테이블을 조합하는 <code class=\"language-text\">JOIN</code> 입니다. 두 번째 테이블에 있는 값을 모두 출력하고, 만약 <code class=\"language-text\">ON</code> 절의 조건을 만족한다면, 첫 번째 테이블의 필드 값을 함께 출력 하지만, 만족하지 않을 경우에는 전부 <code class=\"language-text\">NULL</code>로 처리가 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">FROM</span> PEOPLE\n<span class=\"token keyword\">RIGHT</span> <span class=\"token keyword\">JOIN</span> SCHOOL\n<span class=\"token keyword\">ON</span> SCHOOL<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">=</span> PEOPLE<span class=\"token punctuation\">.</span>SCHOOL<span class=\"token punctuation\">;</span></code></pre></div>\n<p align=\"center\">\n\t<img src=\"/post_image/just-data-science/04-03.jpg\" width=\"70%\"/>\n    <p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tRight Join\n\t</p>\n</p>\n<h2>마치며</h2>\n<p>이번 시간에는 <strong>SQL</strong>의 간단한 문법들에 대해 알아 보았습니다. 다음 시간에는 <strong>머신러닝의 핵심이 되는 학습 과정</strong>을 알아 보고, 이를 수학적으로 해석해 보는 <strong>Machine Learning Basic</strong>에 대해서 알아 보겠습니다.</p>","id":"67ae44e3-5a48-57d9-87ea-fd77d9876c34","frontmatter":{"date":"2021-07-11","path":"/data-science/just-data-science-4","title":"[찍먹 Data Science] 4. SQL","tags":["Data-Science","Python"],"keyword":"Data Science, 데이터 사이언스, Matplotlib","summary":"SQL의 기본 문법에 대해 알아보자.","img":"/post_image/thumbnail/just-data-science-4.jpg","series":"찍먹 Data Science"}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"a15e6d2e-d923-5e8e-9bb9-ae1c7116c1bc","excerpt":"Linear Regression, Classification 안녕하세요? Justkode 입니다. 오늘은 선형 회귀와 분류에 대해 이론을 공부 해 보고, 실습을 진행 해 보는 시간을 가져 보도록 하겠습니다. Before we start 먼저 이번 실습에는  모듈이 필요합니다. 다음을 통해 설치 해 주세요. (단, numpy, pandas, matplotlib이 설치 되어 있다면 scikit-learn만 설치 하셔도 됩니다.) Linear…","frontmatter":{"date":"2021-07-21","tags":["Data-Science","Machine-Learning"],"path":"/data-science/just-data-science-6","title":"[찍먹 Data Science] 6. Linear Regression, Logistic Regression","img":"/post_image/thumbnail/just-data-science-6.jpg","summary":"선형 회귀와 로지스틱 회귀에 대해서 알아 보자."}}},{"node":{"id":"5a9d9d37-ba85-593d-9e17-cd7082bc18c6","excerpt":"Maching Learning Basic. 안녕하세요? Justkode 입니다. 오늘은 머신 러닝의 기본 개념에 대해 공부 해 보는 시간을 가져 보도록 하겠습니다. 학습의 종류 머신 러닝 학습의 종류는 두 종류가 있습니다.  지도 학습 (Supervised Learning) 첫 번째는 지도 학습입니다. 지도 학습은 훈련 데이터로 Feature(특징)와 Target…","frontmatter":{"date":"2021-07-19","tags":["Data-Science","Machine-Learning"],"path":"/data-science/just-data-science-5","title":"[찍먹 Data Science] 5. Machine Learning Basic","img":"/post_image/thumbnail/just-data-science-5.jpg","summary":"머신 러닝의 기본 개념에 대해 알아보자."}}},{"node":{"id":"67ae44e3-5a48-57d9-87ea-fd77d9876c34","excerpt":"SQL 안녕하세요? Justkode 입니다. 오늘은 SQL에 대해서 간단하게 알아보는 시간을 가져보도록 하겠습니다. SQL은 Structured Query Language의 약자로, RDBMS의 데이터베이스를 주로 조회 하는데에 사용이 되는, 데이터베이스 관리 시스템(RDBMS)의 데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어입니다. 여기서 설명 하는 문법들은 많은 내용을 담지 않고, SQL…","frontmatter":{"date":"2021-07-11","tags":["Data-Science","Python"],"path":"/data-science/just-data-science-4","title":"[찍먹 Data Science] 4. SQL","img":"/post_image/thumbnail/just-data-science-4.jpg","summary":"SQL의 기본 문법에 대해 알아보자."}}},{"node":{"id":"72999af7-d2c7-5f95-8d6c-eb8d5219cd76","excerpt":"Matplotlib 안녕하세요? Justkode 입니다. 오늘은 Matplotlib에 대해서 알아보는 시간을 가져보도록 하겠습니다. Matplotlib는 데이터 분석을 위해 만들어진 라이브러리로 Numpy, Pandas…","frontmatter":{"date":"2021-07-08","tags":["Data-Science","Python"],"path":"/data-science/just-data-science-3","title":"[찍먹 Data Science] 3. Matplotlib","img":"/post_image/thumbnail/just-data-science-3.jpeg","summary":"데이터 시각화 모듈, Matplotlib을 알아보자."}}},{"node":{"id":"05ccbb5b-48d4-57d0-9f3b-ca1dae54ed34","excerpt":"Pandas 안녕하세요? Justkode 입니다. 오늘은 Pandas에 대해서 심층있게 알아보는 시간을 가져보도록 하겠습니다. Pandas는 데이터 분석을 위해 만들어진 라이브러리로 Numpy와 함께 많이 사용 됩니다. 주로 사용하는 데이터 구조는 Dataframe과 Series로, Table 정보와 같은 데이터를 처리 하는데 이점이 있습니다. Series and DataFrame 첫 번째로 Series입니다. Series는…","frontmatter":{"date":"2021-07-04","tags":["Data-Science","Python"],"path":"/data-science/just-data-science-2","title":"[찍먹 Data Science] 2. Pandas","img":"/post_image/thumbnail/just-data-science-2.jpg","summary":"데이터 분석에 쓰이는 Pandas를 알아보자."}}},{"node":{"id":"c29d290f-1001-5de9-8997-cb6fe729221b","excerpt":"Data Science And Math 안녕하세요? Justkode 입니다. 많은 Machine Learning과 Deep Learning…","frontmatter":{"date":"2021-06-30","tags":["Data-Science","Python"],"path":"/data-science/just-data-science-1","title":"[찍먹 Data Science] 1. Math, Numpy","img":"/post_image/thumbnail/just-data-science-1.jpg","summary":"간단한 수학 식을 Numpy로 구현해 보자"}}},{"node":{"id":"d0d8165b-3ac6-5f7f-b1e6-e8fb46731ec5","excerpt":"Data Science, 어디부터 해야 할까? 안녕하세요? Justkode 입니다. 일단, 제가 대학교 1,…","frontmatter":{"date":"2021-06-23","tags":["Data-Science"],"path":"/data-science/just-data-science-0","title":"[찍먹 Data Science] 0. Orientation","img":"/post_image/thumbnail/just-data-science-0.jpg","summary":"Data Science를 찍먹해 보자."}}}]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"a15e6d2e-d923-5e8e-9bb9-ae1c7116c1bc","excerpt":"Linear Regression, Classification 안녕하세요? Justkode 입니다. 오늘은 선형 회귀와 분류에 대해 이론을 공부 해 보고, 실습을 진행 해 보는 시간을 가져 보도록 하겠습니다. Before we start 먼저 이번 실습에는  모듈이 필요합니다. 다음을 통해 설치 해 주세요. (단, numpy, pandas, matplotlib이 설치 되어 있다면 scikit-learn만 설치 하셔도 됩니다.) Linear…","frontmatter":{"date":"2021-07-21","tags":["Data-Science","Machine-Learning"],"path":"/data-science/just-data-science-6","title":"[찍먹 Data Science] 6. Linear Regression, Logistic Regression","img":"/post_image/thumbnail/just-data-science-6.jpg","summary":"선형 회귀와 로지스틱 회귀에 대해서 알아 보자."}}},{"node":{"id":"5a9d9d37-ba85-593d-9e17-cd7082bc18c6","excerpt":"Maching Learning Basic. 안녕하세요? Justkode 입니다. 오늘은 머신 러닝의 기본 개념에 대해 공부 해 보는 시간을 가져 보도록 하겠습니다. 학습의 종류 머신 러닝 학습의 종류는 두 종류가 있습니다.  지도 학습 (Supervised Learning) 첫 번째는 지도 학습입니다. 지도 학습은 훈련 데이터로 Feature(특징)와 Target…","frontmatter":{"date":"2021-07-19","tags":["Data-Science","Machine-Learning"],"path":"/data-science/just-data-science-5","title":"[찍먹 Data Science] 5. Machine Learning Basic","img":"/post_image/thumbnail/just-data-science-5.jpg","summary":"머신 러닝의 기본 개념에 대해 알아보자."}}},{"node":{"id":"67ae44e3-5a48-57d9-87ea-fd77d9876c34","excerpt":"SQL 안녕하세요? Justkode 입니다. 오늘은 SQL에 대해서 간단하게 알아보는 시간을 가져보도록 하겠습니다. SQL은 Structured Query Language의 약자로, RDBMS의 데이터베이스를 주로 조회 하는데에 사용이 되는, 데이터베이스 관리 시스템(RDBMS)의 데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어입니다. 여기서 설명 하는 문법들은 많은 내용을 담지 않고, SQL…","frontmatter":{"date":"2021-07-11","tags":["Data-Science","Python"],"path":"/data-science/just-data-science-4","title":"[찍먹 Data Science] 4. SQL","img":"/post_image/thumbnail/just-data-science-4.jpg","summary":"SQL의 기본 문법에 대해 알아보자."}}},{"node":{"id":"72999af7-d2c7-5f95-8d6c-eb8d5219cd76","excerpt":"Matplotlib 안녕하세요? Justkode 입니다. 오늘은 Matplotlib에 대해서 알아보는 시간을 가져보도록 하겠습니다. Matplotlib는 데이터 분석을 위해 만들어진 라이브러리로 Numpy, Pandas…","frontmatter":{"date":"2021-07-08","tags":["Data-Science","Python"],"path":"/data-science/just-data-science-3","title":"[찍먹 Data Science] 3. Matplotlib","img":"/post_image/thumbnail/just-data-science-3.jpeg","summary":"데이터 시각화 모듈, Matplotlib을 알아보자."}}}]}}}}},"staticQueryHashes":["234633779","63159454"]}