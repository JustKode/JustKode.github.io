{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/javascript/destructuring","result":{"data":{"markdownRemark":{"html":"<p><code class=\"language-text\">Destructuring</code>, 한국말로 <code class=\"language-text\">구조 분해</code> 라는 뜻입니다. <code class=\"language-text\">ES6</code> 에서는 <strong>객체를 분해해서 할당 하는</strong> 문법을 제공합니다. 여러분들이 객체 내부 데이터에 접근하고자 하는 상황을 가정 해 보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> justkode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">\"Min Jae Park\"</span><span class=\"token punctuation\">,</span>\n\tuniv<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\tname<span class=\"token operator\">:</span> <span class=\"token string\">\"Kyung Hee Univ.\"</span><span class=\"token punctuation\">,</span>\n\t\tgrade<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\tprogramming<span class=\"token operator\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n\t\t\tmath<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n\t\t\tenglish<span class=\"token operator\">:</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span>\n\t\t\twriting<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n\t\t\tculture<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> programming <span class=\"token operator\">=</span> justkode<span class=\"token punctuation\">.</span>univ<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">.</span>programming\n<span class=\"token keyword\">const</span> math <span class=\"token operator\">=</span> justkode<span class=\"token punctuation\">.</span>univ<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">.</span>math\n<span class=\"token keyword\">const</span> english <span class=\"token operator\">=</span> justkode<span class=\"token punctuation\">.</span>univ<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">.</span>english\n<span class=\"token keyword\">const</span> writing <span class=\"token operator\">=</span> justkode<span class=\"token punctuation\">.</span>univ<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">.</span>writing\n<span class=\"token keyword\">const</span> culture <span class=\"token operator\">=</span> justkode<span class=\"token punctuation\">.</span>univ<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">.</span>culture</code></pre></div>\n<p><code class=\"language-text\">justkode.univ.grade</code> 안에 있는 <code class=\"language-text\">attribute</code>들을 나누어 원하는 변수에 적절하게 할당 하려 했지만, 코드의 길이가 꽤나 길어지는 것 같습니다. 밑에 있는 다섯 줄을 한 줄로 줄일 수 있을까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> justkode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">\"Min Jae Park\"</span><span class=\"token punctuation\">,</span>\n\tuniv<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\tname<span class=\"token operator\">:</span> <span class=\"token string\">\"Kyung Hee Univ.\"</span><span class=\"token punctuation\">,</span>\n\t\tgrade<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\tprogramming<span class=\"token operator\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n\t\t\tmath<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n\t\t\tenglish<span class=\"token operator\">:</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span>\n\t\t\twriting<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n\t\t\tculture<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>programming<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">,</span> writing<span class=\"token punctuation\">,</span> culture<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> justkode<span class=\"token punctuation\">.</span>univ<span class=\"token punctuation\">.</span>grade\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>programming<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">,</span> writing<span class=\"token punctuation\">,</span> culture<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: 'A' 'B' 'C' 'B' 'B'</span></code></pre></div>\n<p><strong>네! 가능합니다.</strong> 위 예시 코드는, <code class=\"language-text\">Destructuring</code>을 이용하여 객체를 <strong>구조 분해 할당</strong>한 모습입니다. 한 번, 여러 가지 예시를 통해서 알아 볼까요?</p>\n<h2>기본적인 변수 할당</h2>\n<p><code class=\"language-text\">Array</code>나 <code class=\"language-text\">Object</code> 같은 경우에는, 순서에 맞게, 혹은 <code class=\"language-text\">attribute</code>를 적절하게 배치 하여 <strong>구조 분해 할당</strong>할 수 있습니다. <code class=\"language-text\">Default</code> 값 또한 설정하여 데이터가 존재 하지 않는 경우를 방지 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 기본적인 변수 할당</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> three<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">\"JustKode\"</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 먼저 선언 된 변수에 할당</span>\n<span class=\"token keyword\">let</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k\n<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">// 기본 값 설정 가능</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>first<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> second<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>math<span class=\"token operator\">=</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> english<span class=\"token operator\">=</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>math<span class=\"token operator\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: 3 2 'A' 'None'</span>\n\n<span class=\"token comment\">// Array 같은 경우, 필요 없는 값 무시 가능</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: 1 3</span>\n\n<span class=\"token comment\">// Array 같은 경우, 나머지 값 Array로 할당 가능</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>z<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: 1 2 [ 3, 4, 5 ]</span>\n\n<span class=\"token comment\">// Object 같은 경우, 나머지 값 Object로 할당 가능</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>python<span class=\"token punctuation\">,</span> javascript<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>others<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tpython<span class=\"token operator\">:</span> <span class=\"token string\">\"Good\"</span><span class=\"token punctuation\">,</span>\n\tjavascript<span class=\"token operator\">:</span> <span class=\"token string\">\"Not Bad\"</span><span class=\"token punctuation\">,</span>\n\tcpp<span class=\"token operator\">:</span> <span class=\"token string\">\"Hard\"</span><span class=\"token punctuation\">,</span>\n\thtml<span class=\"token operator\">:</span> <span class=\"token string\">\"NOT PROGRAMMING LANGUAGE\"</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>python<span class=\"token punctuation\">,</span> javascript<span class=\"token punctuation\">,</span> others<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: Good Not Bad { cpp: 'Hard', html: 'NOT PROGRAMMING LANGUAGE' }</span></code></pre></div>\n<h2>Nested Object</h2>\n<p><code class=\"language-text\">Object</code> 안에 <code class=\"language-text\">Object</code> 가 있는 구조를 이쁘게 한 줄로 <strong>구조 분해 할당</strong> 할 방법이 있을 까요? 하는 방법은 간단합니다, 참조 하고 싶은 <code class=\"language-text\">attribute Object</code>를 <code class=\"language-text\">:</code> 을 이용하여, 참조 하여 할당하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> justkode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">\"Min Jae Park\"</span><span class=\"token punctuation\">,</span>\n\tuniv<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\tname<span class=\"token operator\">:</span> <span class=\"token string\">\"Kyung Hee Univ.\"</span><span class=\"token punctuation\">,</span>\n\t\tgrade<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\tprogramming<span class=\"token operator\">:</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span>\n\t\t\tmath<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n\t\t\tenglish<span class=\"token operator\">:</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">,</span>\n\t\t\twriting<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span>\n\t\t\tculture<span class=\"token operator\">:</span> <span class=\"token string\">\"B\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\tlanguage<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Python'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C++'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>univ<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>grade<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>programming<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">,</span> writing<span class=\"token punctuation\">,</span> culture<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> justkode\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>programming<span class=\"token punctuation\">,</span> math<span class=\"token punctuation\">,</span> english<span class=\"token punctuation\">,</span> writing<span class=\"token punctuation\">,</span> culture<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: A B C B B</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>language<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>python<span class=\"token punctuation\">,</span> javascript<span class=\"token punctuation\">,</span> cpp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> justkode\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>python<span class=\"token punctuation\">,</span> javascript<span class=\"token punctuation\">,</span> cpp<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: Python, JavaScript, C++</span></code></pre></div>\n<h2>변수 이름 변경</h2>\n<p><code class=\"language-text\">Object</code>를 <strong>구조 분해 할당</strong> 할 경우, <code class=\"language-text\">attribute</code>의 이름을 그대로, 변수로 써야 하나... 라는 고민은 할 필요 없습니다. 다행히도 <strong>이름을 변경</strong> 할 수 있도록 하는 문법이 구현 되어 있습니다. <code class=\"language-text\">attribute</code>명 옆에 <code class=\"language-text\">:</code>을 붙이고, <strong>설정 하고 싶은 변수명</strong>을 작성 하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> nickname<span class=\"token punctuation\">,</span> favorite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>language<span class=\"token operator\">:</span> lg<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'justkode'</span><span class=\"token punctuation\">,</span> favorite<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>language<span class=\"token operator\">:</span> <span class=\"token string\">'Python'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">,</span> lg<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// Out: justkode Python</span></code></pre></div>\n<h2>함수 파라미터의 구조 분해 할당</h2>\n<p>당연히 함수에서도 파라미터의 <strong>구조 분해 할당</strong>이 가능합니다. <code class=\"language-text\">Default Parameter</code>도 사용 가능합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> job<span class=\"token operator\">=</span><span class=\"token string\">'jobless'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hi! I'm </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, I'm </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>age<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> years old.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n\tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I'm </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>job<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'justkode'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">23</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Out: Hi! I'm justkode, I'm 23 years old.</span>\n<span class=\"token comment\">// Out: I'm jobless</span></code></pre></div>\n<h2>마치며</h2>\n<p>이 문법은 <code class=\"language-text\">React</code>, <code class=\"language-text\">Vue</code> 같은 최신 프레임 워크에서 특히 많이 사용됩니다. 또한 <code class=\"language-text\">import</code> 할 때도 많이 사용 됩니다. ex) <code class=\"language-text\">import React, {Components} from &quot;react&quot;</code> <strong>ES6</strong>의 핵심 문법 중 하나이니, 꼭 알아 두세요!</p>","id":"adfe105a-6113-58b0-92e7-1b220715f730","frontmatter":{"date":"2020-04-14","path":"/javascript/destructuring","title":"[ES6] Destructuring, 배열, 객체의 요소를 할당하는 법","tags":["JavaScript"],"keyword":"Javascript, javascript, 자바스크립트, es6, js, destructuring, Javascript Destructuring, js destructuring","summary":"구조 분해, 구조 분해 할당에 대하여","img":"/post_image/js-destructuring.png","series":"Morden Javascript"}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"adfe105a-6113-58b0-92e7-1b220715f730","excerpt":"…","frontmatter":{"date":"2020-04-14","tags":["JavaScript"],"path":"/javascript/destructuring","title":"[ES6] Destructuring, 배열, 객체의 요소를 할당하는 법","img":"/post_image/js-destructuring.png","summary":"구조 분해, 구조 분해 할당에 대하여"}}}]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"adfe105a-6113-58b0-92e7-1b220715f730","excerpt":"…","frontmatter":{"date":"2020-04-14","tags":["JavaScript"],"path":"/javascript/destructuring","title":"[ES6] Destructuring, 배열, 객체의 요소를 할당하는 법","img":"/post_image/js-destructuring.png","summary":"구조 분해, 구조 분해 할당에 대하여"}}}]}}}}}}