{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/deep-learning/dl-summary-2","result":{"data":{"markdownRemark":{"html":"<p>이번 시간에는 <strong>Deep Learning</strong>의 <strong>Network</strong>들을 정리 해 보는 시간을 가져보겠습니다.</p>\n<h2>DNN(Deep Neural Network)</h2>\n<p><strong>심층 신경망(Deep Neural Network)</strong>는 딥러닝의 가장 기본이 되는 <strong>신경망</strong>이며, <strong>입력층(input layer)</strong>과 <strong>출력층(output layer)</strong> 사이에 여러개의 <strong>은닉층(hidden layer)</strong>으로 이루어진 모델입니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/dl-summary-2/1-1.png\" width=\"30%\"/>\n\t<p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tDNN\n\t</p>\n</p>\n<h3>장점</h3>\n<p>사실, 딥러닝의 장점이라고 할 수 있습니다.</p>\n<ul>\n<li>일반 머신러닝과 다르게 <strong>딥러닝</strong>을 통해 학습하면, <strong>데이터가 많으면 많은 만큼 정확한 결과</strong>를 나타냅니다.</li>\n<li><strong>비선형적인 문제</strong>들을 해결 할 수 있습니다.</li>\n<li><strong>Feature Extraction</strong>이 자동으로 수행 됩니다.</li>\n</ul>\n<h3>단점</h3>\n<p>이도 마찬가지로, 딥러닝의 단점이라고 볼 수 있습니다.</p>\n<ul>\n<li><strong>Overfitting</strong>의 문제가 발생 합니다.</li>\n<li><strong>시간이 오래 걸립니다.</strong></li>\n<li><strong>Feature Extraction</strong>을 통해 추출 한 가중치의 의미를 해석 하기 힘듭니다.</li>\n</ul>\n<h2>CNN(Convolutional Neural Network)</h2>\n<p><strong>CNN(Convolutional Neural Network)</strong>은 <strong>합성곱 신경망</strong>이라고도 불리며 이미지, 텍스트와 같은 데이터의 <strong>형상 정보를 유지</strong>하여 학습 한다는 점에서 자주 사용되는 신경망 중 하나 입니다.</p>\n<ul>\n<li>합성곱층(Convolutional Layer): 입력 데이터의 <strong>형상을 유지</strong>하여, 다음 레이어에 전달 하는 역할을 합니다.</li>\n<li>필터(filter): 합성곱층의 <strong>가중치 파라미터</strong>에 해당하며, <strong>커널(Kernel)</strong> 이라고도 합니다. 합성곱층의 <strong>특성을 추출</strong>하는 역할을 합니다.</li>\n<li>수용영역(Receptive Field): <strong>필터의 크기</strong>라고 할 수 있으며, 담으려고 하는 <strong>형상의 크기</strong> 라고도 할 수 있습니다.</li>\n<li>패딩(Padding): 합성곱 연산 시행 전, 입력 데이터의 <strong>가장 자리를 채우는 것</strong>을 의미 합니다.</li>\n<li>스트라이드(Stride): 필터 적용시, <strong>필터가 이동하는 간격</strong>을 의미 합니다.</li>\n</ul>\n<p align=\"center\">\n\t<img src=\"/post_image/dl-summary-2/1-2.jpg\" width=\"80%\"/>\n\t<p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tDNN\n\t</p>\n</p>\n<h3>장점</h3>\n<ul>\n<li><strong>형상 정보</strong>를 추출 할 수 있습니다.</li>\n<li><strong>이미지 학습</strong>에 매우 강력합니다!</li>\n<li>학습 파라미터가 <strong>매우 작습니다!</strong></li>\n</ul>\n<h3>단점</h3>\n<ul>\n<li><strong>지역적인 정보</strong>를 추출 하는데에 집중 되어, 먼 곳에 떨어져 있는 데이터의 특성을 추출 하기 힘듭니다.</li>\n</ul>\n<h2>RNN(Recurrent Neural Network)</h2>\n<p><strong>RNN(Recurrent Neural Network)</strong>은 <strong>순환 신경망</strong> 이라고도 하며, 음성, 텍스트 같이 순서가 있는 데이터를 모델링 하기 위해 등장 하였습니다. <strong>순환이 가능</strong> 하여, 시퀀스 길이에 관계없이 인풋과 아웃풋을 받아들일 수 있습니다.</p>\n<p align=\"center\">\n\t<img src=\"/post_image/dl-summary-2/1-3.png\" width=\"80%\"/>\n\t<p align=\"center\" style=\"color:#888888; font-size: 12px;\">\n\t\tRNN\n\t</p>\n</p>\n<h3>장점</h3>\n<ul>\n<li><strong>순서가 있는 데이터</strong>에서 유의미한 결과를 도출 해 낼 수 있습니다!</li>\n<li><strong>음성, 텍스트 학습</strong>에 매우 강력합니다!</li>\n<li>학습 파라미터가 <strong>매우 작습니다!</strong></li>\n<li><strong>입력 데이터, 출력 데이터 크기</strong>에 구애를 받지 않습니다!</li>\n</ul>\n<h3>단점</h3>\n<ul>\n<li>시간이 <strong>매우 오래걸립니다.</strong></li>\n<li>문맥상 거리가 멀 경우, <strong>기울기 소실</strong> 이슈가 발생 합니다.</li>\n</ul>","id":"4917422f-e39a-5fe7-81c9-21594a6bd938","frontmatter":{"date":"2020-09-19","path":"/deep-learning/dl-summary-2","title":"Deep Learning Summary - 2. 신경망","tags":["Deep-Learning"],"keyword":"Deep Learning, Deep Learning Summary, 딥러닝, 딥러닝 용어, 딥러닝 용어 정리, 딥러닝 신경망, Deep Learning Network","summary":"딥러닝 신경망들을 정리 해 보자.","img":"/post_image/thumbnail/dl-summary-2.png","series":"Deep Learning Summary"}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"4917422f-e39a-5fe7-81c9-21594a6bd938","excerpt":"이번 시간에는 Deep Learning의 Network들을 정리 해 보는 시간을 가져보겠습니다. DNN(Deep Neural Network) 심층 신경망(Deep Neural Network)는 딥러닝의 가장 기본이 되는 신경망이며, 입력층(input layer)과 출력층(output layer) 사이에 여러개의 은닉층(hidden layer…","frontmatter":{"date":"2020-09-19","tags":["Deep-Learning"],"path":"/deep-learning/dl-summary-2","title":"Deep Learning Summary - 2. 신경망","img":"/post_image/thumbnail/dl-summary-2.png","summary":"딥러닝 신경망들을 정리 해 보자."}}},{"node":{"id":"64099a33-c274-5c67-bd1d-ee7c7e4104c9","excerpt":"이번 시간에는 Deep Learning 에서 사용 하는 몇 가지 용어들에 대해서 정리 해 보는 시간을 가져 보겠습니다. 이 게시글에서는 기초 미분, 선형 대수, 통계, 확률론 그리고, 실제 어플리케이션을 만들 때 다루는 기초 딥러닝 용어 들을 카테고리 별로 나누어 정리 해 보도록 하겠습니다. 주의: 남 보라고 쓴 글이라기 보단, 저 보려고 쓴 글에 더 가깝습니다. 목차 1. 미분\n2. 선형 대수\n3. 확률과 통계…","frontmatter":{"date":"2020-09-13","tags":["Deep-Learning"],"path":"/deep-learning/dl-summary-1","title":"Deep Learning Summary - 1. 기초 용어 정리","img":"/post_image/thumbnail/dl-summary-1.jpg","summary":"Deep Learning 기초 용어들을 정리 해 보자."}}}]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"4917422f-e39a-5fe7-81c9-21594a6bd938","excerpt":"이번 시간에는 Deep Learning의 Network들을 정리 해 보는 시간을 가져보겠습니다. DNN(Deep Neural Network) 심층 신경망(Deep Neural Network)는 딥러닝의 가장 기본이 되는 신경망이며, 입력층(input layer)과 출력층(output layer) 사이에 여러개의 은닉층(hidden layer…","frontmatter":{"date":"2020-09-19","tags":["Deep-Learning"],"path":"/deep-learning/dl-summary-2","title":"Deep Learning Summary - 2. 신경망","img":"/post_image/thumbnail/dl-summary-2.png","summary":"딥러닝 신경망들을 정리 해 보자."}}},{"node":{"id":"64099a33-c274-5c67-bd1d-ee7c7e4104c9","excerpt":"이번 시간에는 Deep Learning 에서 사용 하는 몇 가지 용어들에 대해서 정리 해 보는 시간을 가져 보겠습니다. 이 게시글에서는 기초 미분, 선형 대수, 통계, 확률론 그리고, 실제 어플리케이션을 만들 때 다루는 기초 딥러닝 용어 들을 카테고리 별로 나누어 정리 해 보도록 하겠습니다. 주의: 남 보라고 쓴 글이라기 보단, 저 보려고 쓴 글에 더 가깝습니다. 목차 1. 미분\n2. 선형 대수\n3. 확률과 통계…","frontmatter":{"date":"2020-09-13","tags":["Deep-Learning"],"path":"/deep-learning/dl-summary-1","title":"Deep Learning Summary - 1. 기초 용어 정리","img":"/post_image/thumbnail/dl-summary-1.jpg","summary":"Deep Learning 기초 용어들을 정리 해 보자."}}},{"node":{"id":"08fcd7f7-5104-56ea-a169-01cc7dcf2b39","excerpt":"에서 모델의 가중치를 저장하기 위해선 3가지 함수만 알면 충분 합니다. : 객체를 디스크에 저장합니다.  모듈을 이용하여 객체를 직렬화 하며, 이 함수를 사용하여 모든 종류의 모델, Tensor 등을 저장할 수 있습니다. :  모듈을 이용하여 객체를 역직렬화하여 메모리에 할당합니다. : 역직렬화된 state_dict를 사용, 모델의 매개변수들을 불러옵니다. state_dict는 간단히 말해 각 체층을 매개변수 Tensor로 매핑한 Python…","frontmatter":{"date":"2020-04-26","tags":["Deep-Learning","Python"],"path":"/deep-learning/pytorch-save","title":"Pytorch에서 학습한 모델 저장 및 불러오기","img":"/post_image/pytorch-save.png","summary":"Pytorch 모델을 저장하고, 불러와 보기"}}},{"node":{"id":"06a24b14-d64f-566b-a789-55bf5c09425f","excerpt":"에서는 과 마찬가지로, 과 관련 된 를 제공합니다. 이를 이용해 손쉽게  네트워크를 구축 할 수 있습니다. Recurrent Neural Network 를 위한 는  입니다. 일단  시퀀스의 각 요소에 대해, 각 레이어에서는 다음 연산을 수행합니다.  Parameters : 의 사이즈에 해당 하는 수를 입력하면 됩니다. : 은닉층의 사이즈에 해당 하는 수를 입력하면 됩니다. : 의 은닉층 레이어 갯수를 나타냅니다. 기본 값은…","frontmatter":{"date":"2020-04-19","tags":["Deep-Learning","Python"],"path":"/deep-learning/pytorch-rnn","title":"Pytorch로 RNN, LSTM 구현하기","img":"https://lionbridge.ai/wp-content/uploads/2020/03/2020-02-21_difference-between-cnn-rnn-1.png","summary":"자연어 처리, 감성 분류 등에 사용되는 RNN, LSTM"}}}]}}}}}}