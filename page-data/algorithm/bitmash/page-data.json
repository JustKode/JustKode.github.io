{"componentChunkName":"component---src-layouts-post-layout-tsx","path":"/algorithm/bitmash","result":{"data":{"markdownRemark":{"html":"<p>밑 예제 들은 <code class=\"language-text\">Python</code>으로 작성 되었습니다.</p>\n<h2>나름 짧은 서론</h2>\n<p>거두절미 하고 이야기 하면, <strong>비트마스크</strong>는 알고리즘 이라기 보단 테크닉에 가깝습니다. <strong>비트</strong>는 컴퓨터에서 다루는 최소 단위이며, <strong>정수를 이진수로 표현, 비트 연산을 통해 문제를 해결해 나가는 기술</strong>을 <strong>비트마스크</strong> 라고 합니다.</p>\n<p>예를 들어 보겠습니다. 10개의 스위치가 있다고 가정하고, 우리는 이 10개의 스위치 상태를 표현 하고 싶습니다! 당연히 스위치는 on/off 만 존재 할 것입니다. 이를 <code class=\"language-text\">list</code> 형태로 표현하면.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">switch_states <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>하지만, 이는 <strong>2진수의 숫자</strong> 로도 표현 할 수 있지 않을까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">switch_states <span class=\"token operator\">=</span> <span class=\"token number\">0b1001100011</span>  <span class=\"token comment\"># 611, python에서는 앞에 '0b'를 붙여 이진수 표현 가능</span></code></pre></div>\n<p>이렇게 정수형으로 나타내면 장점이 다양합니다.</p>\n<ul>\n<li><strong>비트연산</strong>을 통한 삽입, 삭제, 조회 등이 간단해짐</li>\n<li><strong>더 간결한 코드</strong> 작성이 가능</li>\n<li><strong>더 빠른 연산</strong>이 가능</li>\n<li><strong>비트마스크</strong>를 이용한 정수 표현으로 <strong>다이나믹 프로그래밍</strong>이 가능함. (중요)</li>\n</ul>\n<h2>비트 연산</h2>\n<h3>AND 연산 (&#x26;)</h3>\n<p>대응하는 숫자가 모두 1일 경우 1을 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b1010011010</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0b1101101100</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b1000001000</span></code></pre></div>\n<h3>OR 연산 (|)</h3>\n<p>대응하는 숫자중 하나라도 1일 경우 1을 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b1010011010</span> <span class=\"token operator\">|</span> <span class=\"token number\">0b1101101100</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b1111111110</span></code></pre></div>\n<h3>XOR 연산 (^)</h3>\n<p>대응하는 숫자가 서로 다를 경우 1을 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b1010011010</span> <span class=\"token operator\">^</span> <span class=\"token number\">0b1101101100</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b111110110</span></code></pre></div>\n<h3>SHIFT 연산 (>>, &#x3C;&#x3C;)</h3>\n<p><code class=\"language-text\">a &lt;&lt; b</code>는 <code class=\"language-text\">a</code>의 비트를 <code class=\"language-text\">b</code>칸 만큼 왼쪽으로 밀어 내는 것이고, <code class=\"language-text\">a &gt;&gt; b</code>는 <code class=\"language-text\">a</code>의 비트를 <code class=\"language-text\">b</code>칸 만큼 오른쪽으로 밀어내는 것 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b0010</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b1000</span>\n<span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b1100</span> <span class=\"token operator\">>></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b11</span></code></pre></div>\n<h3>NOT 연산 (~)</h3>\n<p>비트 값을 반전시킵니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token number\">0b0010</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 0b1101</span></code></pre></div>\n<h2>비트 연산 응용</h2>\n<h3>원소 추가</h3>\n<p>n번째 수를 추가 하고자 할 때</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b0010</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#  0b1010</span></code></pre></div>\n<h3>원소 제거</h3>\n<p>n번째 수를 제거 하고자 할 때</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b1010</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#  0b10</span></code></pre></div>\n<h3>원소 조회</h3>\n<p>n번째 수가 있나 없나 확인 할 때  (0이면 없고, 1 이상이면 있는 것)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b1010</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#  0b1000</span></code></pre></div>\n<h3>원소 토글</h3>\n<p>n번째 수를 켜져 있으면 끄고, 꺼져 있으면 켬</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0b1010</span> <span class=\"token operator\">^</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#  0b10</span></code></pre></div>\n<h2>풀만한 알고리즘 문제</h2>\n<h3>연습</h3>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/12813\">백준 12813번 이진수 연산</a> : 비트 연산으로 간단하게 해결 가능.</li>\n</ul>\n<h3>실전</h3>\n<ul>\n<li><a href=\"https://www.acmicpc.net/problem/1562\">백준 1562번 계단 수</a> : 0~9를 모두 순회했는지 비트마스크로 확인</li>\n<li><a href=\"https://www.acmicpc.net/problem/2098\">백준 2098번 외판원 순회</a> : 모든 경로를 순회했는지 비트마스크로 확인</li>\n</ul>","id":"762a19c3-1bd2-530b-83b2-e22871a56de0","frontmatter":{"date":"2020-06-16","path":"/algorithm/bitmash","title":"비트마스크(bitmask)란 무엇인가?","tags":["Algorithm"],"keyword":"Algorithm, algorithm, 알고리즘, 비트마스크, bitmask, python","summary":"bit 연산을 이용한 소소한 테크닉","img":"https://images3.memedroid.com/images/UPLOADED428/591a94aecec53.jpeg","series":"Algorithm Knowledge"}}},"pageContext":{"series":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"762a19c3-1bd2-530b-83b2-e22871a56de0","excerpt":"밑 예제 들은 으로 작성 되었습니다. 나름 짧은 서론 거두절미 하고 이야기 하면, 비트마스크는 알고리즘 이라기 보단 테크닉에 가깝습니다. 비트는 컴퓨터에서 다루는 최소 단위이며, 정수를 이진수로 표현, 비트 연산을 통해 문제를 해결해 나가는 기술을 비트마스크 라고 합니다. 예를 들어 보겠습니다. 10개의 스위치가 있다고 가정하고, 우리는 이 10개의 스위치 상태를 표현 하고 싶습니다! 당연히 스위치는 on/off…","frontmatter":{"date":"2020-06-16","tags":["Algorithm"],"path":"/algorithm/bitmash","title":"비트마스크(bitmask)란 무엇인가?","img":"https://images3.memedroid.com/images/UPLOADED428/591a94aecec53.jpeg","summary":"bit 연산을 이용한 소소한 테크닉"}}}]}}},"categoryPosts":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"762a19c3-1bd2-530b-83b2-e22871a56de0","excerpt":"밑 예제 들은 으로 작성 되었습니다. 나름 짧은 서론 거두절미 하고 이야기 하면, 비트마스크는 알고리즘 이라기 보단 테크닉에 가깝습니다. 비트는 컴퓨터에서 다루는 최소 단위이며, 정수를 이진수로 표현, 비트 연산을 통해 문제를 해결해 나가는 기술을 비트마스크 라고 합니다. 예를 들어 보겠습니다. 10개의 스위치가 있다고 가정하고, 우리는 이 10개의 스위치 상태를 표현 하고 싶습니다! 당연히 스위치는 on/off…","frontmatter":{"date":"2020-06-16","tags":["Algorithm"],"path":"/algorithm/bitmash","title":"비트마스크(bitmask)란 무엇인가?","img":"https://images3.memedroid.com/images/UPLOADED428/591a94aecec53.jpeg","summary":"bit 연산을 이용한 소소한 테크닉"}}},{"node":{"id":"1695e5c9-2a5b-5127-bab2-c195d594440c","excerpt":"최단 경로 알고리즘은 지하철 노선도, 네비게이션 등 다방면에 사용되는 알고리즘입니다. 이번 시간에는 Python을 이용해 하나의 시작 정점으로 부터 모든 다른 정점까지의 최단 경로를 찾는 최단 경로 알고리즘인 다익스트라(dijkstra…","frontmatter":{"date":"2020-05-31","tags":["Python","Algorithm"],"path":"/algorithm/python-dijkstra","title":"Python으로 다익스트라(dijkstra) 알고리즘 구현하기","img":"/post_image/img_subway.png","summary":"최단 경로를 찾아보자"}}},{"node":{"id":"fe4b57d0-eb27-5f68-a53f-d01e829e127e","excerpt":"Python, Algorithm, Tips…","frontmatter":{"date":"2020-03-27","tags":["Python","Algorithm"],"path":"/python/pygorithm-3","title":"파이썬으로 알고리즘을 풀어보자! - 3. 팁","img":"https://miro.medium.com/max/1027/1*Ud_bNdeWPf4iN1EcydaDFA.png","summary":"Python, Algorithm, Tips"}}},{"node":{"id":"22eb72cc-df9e-5ca3-892f-6c4c248a8f73","excerpt":"Python…","frontmatter":{"date":"2020-03-22","tags":["Python","Algorithm"],"path":"/python/pygorithm-2","title":"파이썬으로 알고리즘을 풀어보자! - 2. 모듈","img":"https://miro.medium.com/max/1027/1*Ud_bNdeWPf4iN1EcydaDFA.png","summary":"Python의 내장 함수와 모듈"}}}]}}}}},"staticQueryHashes":["234633779","63159454"]}