{"version":3,"sources":["webpack:///./src/components/wrapper/categoryWrapper.tsx","webpack:///./src/components/postBlock.tsx","webpack:///./src/layouts/listLayout.tsx"],"names":["styled","span","MainContainer","div","BackgroundContainer","props","src","BottomContainer","Title","TimeContainer","Content","BlackContainer","PostBlock","tags","map","x","key","to","toLowerCase","path","img","style","title","summary","date","SubContainer","TitleContainer","LittleContainer","PostBanner","imagePosition","NavContainer","CircleWrapper","Post","edges","data","allMarkdownRemark","pageContext","Posts","filter","edge","node","frontmatter","id","currentPage","description","keyword","url","numPages"],"mappings":"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","file":"component---src-layouts-list-layout-tsx-f69c9739af3d4bbbe634.js","sourcesContent":["import styled from \"styled-components\"\n\nexport default styled.span`\n\tdisplay: inline-block;\n    margin-right: 4px;\n\tpadding: 6px 8px;\n\tbackground-color: black;\n    font-size: 12px;\n\n\ta {\n\t\tcolor: white;\n\t\ttext-decoration: none;\n\t\tfont-family: Montserrat,Helvetica,Arial,sans-serif;\n\t}\n\t@media (max-width: 1079px) {\n\t\tpadding: 6px;\n\t\tfont-size: 10px;\n\t}\n`","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FaCalendarDay } from \"react-icons/fa\"\nimport { Link } from 'gatsby'\n\nimport CategoryWrapper from \"./wrapper/categoryWrapper\"\n\nconst MainContainer = styled.div`\n\tdisplay: inline-block;\n\twidth: calc(100% - 30px);\n\tmax-width: 330px;\n\theight: 400px;\n\tmargin: 10px;\n\tposition: relative;\n\ttext-align: left;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\t\n\t\n\t@media (max-width: 1079px) {\n\t\tmax-width: 400px;\n\t\theight: 300px;\n\t}\n\n\t@media (max-width: 887px) {\n\t\tmax-width: none;\n\t}\n\n\t&:hover {\n\t\tbackground-size: calc(cover * 1.2);\n\t}\n\n`\nconst BackgroundContainer = styled.div<{src: string}>`\n\twidth: 100%;\n\theight: 100%;\n\t\n\tposition: absolute;\n\topacity: 0.5;\n\tbackground-image: url('${props => props.src}');\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center top;\n\ttransition: 0.4s;\n\n\t&:hover {\n\t\ttransform: scale(1.2);\n\t}\n`\n\nconst BottomContainer = styled.div`\n\twidth: 100%;\n\tposition: absolute;\n\tbottom: 0%;\n\n\ta {\n\t\tcolor: white;\n\t\ttext-decoration: none;\n\t}\n`\n\nconst Title = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tpadding: 8px;\n\tcolor: white;\n\ttransition: 0.4s;\t\n\n\t&:hover {\n\t\tcolor: #cccccc;\n\t}\n`\n\nconst TimeContainer = styled.div`\n\tfont-size: 14px;\n\tcolor: #cccccc;\n\tpadding: 8px;\n`\n\nconst Content = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tcolor: white;\n\tpadding-left: 8px;\n`\n\nconst BlackContainer = styled.div`\n\tz-index: -1;\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\tbackground-color: black;\n\tpointer-events: none;\n`\n\ninterface PostPreview {\n\ttitle: string;\n\ttags: Array<string>;\n\tdate: string;\n\timg: string;\n\tpath: string;\n\tsummary: string;\n\tkey: string;\n}\n\nconst PostBlock: React.FunctionComponent<PostPreview> = (props) => {\n\tconst tags = props.tags.map(x => <CategoryWrapper key={x}><Link to={`/${x.toLowerCase()}`}>{x}</Link></CategoryWrapper>)\n\t\n\treturn (\n\t\t\n\t\t\t<MainContainer>\n\t\t\t\t<Link to={`${props.path}`}>\n\t\t\t\t\t<BackgroundContainer src={`${props.img}`}/>\n\t\t\t\t\t<BlackContainer/>\n\t\t\t\t</Link>\n\t\t\t\t<BottomContainer>\n\t\t\t\t\t<div style={{\"margin\": \"0 8px\"}}>{tags}</div>\n\t\t\t\t\t<Link to={`${props.path}`}>\n\t\t\t\t\t\t<Title>{props.title}</Title>\n\t\t\t\t\t\t<Content>{props.summary}</Content>\n\t\t\t\t\t\t<TimeContainer><FaCalendarDay /> {props.date}</TimeContainer>\n\t\t\t\t\t</Link>\n\t\t\t\t</BottomContainer>\n\t\t\t</MainContainer>\n\t\t\n\t)\n}\n\nexport default PostBlock;","import React from \"react\"\nimport styled from \"styled-components\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\nimport SEO from \"../components/seo\"\nimport PostBlock from \"../components/postBlock\"\nimport { graphql, Link } from \"gatsby\"\nimport { FaRegCalendar, FaChevronLeft, FaChevronRight } from \"react-icons/fa\"\n\nconst MainContainer = styled.div`\n\n`\n\nconst SubContainer = styled.div`\n\twidth: 100%;\n\tmax-width: 1080px;\n\tmargin: auto;\n\tpadding: 20px;\n\tbox-sizing: border-box;\n\tposition: relative;\n  \n`\n\nconst BottomContainer = styled.div`\n\tposition: absolute;\n\tbottom: 0%;\n\tpadding-bottom: 12px;\n\twidth: calc(100% - 40px);\n`\n\nconst HeadContainer = styled.div`\n\twidth: 100%;\n\tborder-bottom: 1px solid #bbbbbb;\n`\n\nconst CategoryContainer = styled.span`\n\tpadding: 8px;\n\tbackground-color: black;\n`\n\nconst TitleContainer = styled.div`\n\tfont-weight: 600;\n\tfont-size: 32px;\n\t@media (max-width: 1079px) {\n\t\tfont-size: 24px;\n\t}\n`\n\nconst LittleContainer = styled.div`\n\tfont-size: 14px;\n\tcolor: #bbbbbb;\n`\n\nconst PostBanner = styled.div`\n\twidth: 100%;\n\theight: 300px;\n\tcolor: white;\n\tposition: relative;\n\toverflow: hidden;\n`\n\nconst BackgroundContainer = styled.div<{img: string, imagePosition: string}>`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: url('${props => props.img}');\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: ${props => props.imagePosition};\n\tanimation-name: zoomin;\n  animation-duration: 5s;\n\tanimation-fill-mode: both;\n\tz-index: -1;\n\tposition: absolute;\n\n\t@-webkit-keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n\t@keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n`\n\nconst NavContainer = styled.div`\n\tpadding: 8px;\n\ttext-align: center;\n\tfont-size: 24px;\n\tfont-weight: bold;\n\tsvg {\n\t\tmargin-bottom: -4px;\n\t\tmargin-left: 4px;\n\t\tmargin-right: 4px;\n\t\tcolor: black;\n\t}\n`\n\nconst BlackContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\tbackground-color: black;\n\tpointer-events: none;\n\tz-index: 0;\n\topacity: 0.5;\n`\n\nconst CircleWrapper = styled.div`\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\twidth: 40px;\n\theight: 40px;\n\tpadding-top: 4px;\n\tborder-radius: 50%;\n\tbackground-color: black;\n\tcolor: white;\n\ttext-align: center;\n\tfont-family: Montserrat, Noto Sans KR, Helvetica,Arial, sans-serif; \n\tfont-weight: 100;\n`\n\nexport default function Post({\n\tdata: {\n\t\tallMarkdownRemark: {edges},\n\t}, pageContext\n}) {\n\t\n\tconst Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date)\n    .map(edge => <PostBlock\n                    key={edge.node.id}\n                    title={edge.node.frontmatter.title}\n                    date={edge.node.frontmatter.date}\n                    tags={edge.node.frontmatter.tags}\n                    img={edge.node.frontmatter.img}\n                    summary={edge.node.frontmatter.summary}\n                    path={edge.node.frontmatter.path}\n                  />)\n\t\n\treturn (\n\t\t<MainContainer>\n\t\t\t<Header />\n\t\t\t<SEO title={`${pageContext.title} - Page ${pageContext.currentPage}`} description={pageContext.description} keyword={pageContext.keyword}/>\n\t\t\t<PostBanner>\n\t\t\t\t<BlackContainer />\n\t\t\t\t<BackgroundContainer\n          img={pageContext.img}\n          imagePosition={pageContext.imagePosition}\n        />\n\t\t\t\t<SubContainer style={{\"height\": \"100%\"}}>\n\t\t\t\t\t<BottomContainer>\n\t\t\t\t\t\t<TitleContainer>{pageContext.title} - Page {pageContext.currentPage}</TitleContainer>\n\t\t\t\t\t\t<LittleContainer>{pageContext.description}</LittleContainer>\n\t\t\t\t\t</BottomContainer>\n\t\t\t\t</SubContainer>\n\t\t\t</PostBanner>\n\t\t\t<SubContainer style={{\"padding\": \"20px 15px\"}}>\n\t\t\t\t{Posts}\n\t\t\t</SubContainer>\n\t\t\t<NavContainer>\n\t\t\t\t{pageContext.currentPage > 2 && <Link to={`/${pageContext.url}/${pageContext.currentPage - 1}`}><FaChevronLeft /></Link>}\n\t\t\t\t{pageContext.currentPage == 2 && <Link to={`/${pageContext.url}`}><FaChevronLeft /></Link>}\n\t\t\t\t<CircleWrapper>{pageContext.currentPage}</CircleWrapper>\n\t\t\t\t{pageContext.currentPage < pageContext.numPages && <Link to={`/${pageContext.url}/${pageContext.currentPage + 1}`}><FaChevronRight /></Link>}\n\t\t\t</NavContainer>\n\t\t\t<Footer />\n\t\t</MainContainer>\n\t)\n}\n\nexport const pageQuery = graphql`\n  query listQuery($skip: Int!, $limit: Int!, $filter: MarkdownRemarkFilterInput) {\n    allMarkdownRemark(\n      filter: $filter\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            path\n            title\n            img\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}