{"version":3,"file":"static/webpack/static/development/pages/post.js.11e9483fe5209650d187.hot-update.js","sources":["webpack:///./components/timer.tsx","webpack:///./pages/post/index.tsx"],"sourcesContent":["import React, {Component} from 'react'\nimport styled from 'styled-components'\n\nconst TimerBox = styled.div`\n    display: inline-block;\n    color: white;\n    font-size: 3rem;\n    font-weight: bold;\n`\n\n\ninterface TimerState {\n    time: Date,\n    discharge: Date\n}\n\nclass Timer extends Component<any, TimerState> {\n    _isMounted = false\n    \n    state = {\n        time: new Date(),\n        discharge: new Date('December 29, 2020')\n    }\n\n    update = () => {\n        if (this._isMounted == true) {\n            this.setState({\n                time: new Date()\n            })\n        }\n        \n    }\n\n    componentDidMount() {\n        this._isMounted = true\n        setInterval(this.update, 1000)\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false\n    }\n\n    render() {\n        const timeRemaining = new Date(this.state.discharge.getTime() - this.state.time.getTime())\n        const dday = Math.floor(timeRemaining.getTime() / (1000 * 60 * 60 * 24))\n        \n        const hour = timeRemaining.getUTCHours() % 24\n        const minute = timeRemaining.getUTCMinutes() % 60\n        const second = timeRemaining.getUTCSeconds() % 60\n\n        const stringHour = (\"0\" + hour).slice(-2)\n        const stringMinute = (\"0\" + minute).slice(-2);\n        const stringSecond = (\"0\" + second).slice(-2);\n\n        return (\n            <TimerBox>\n                D-{dday} {stringHour}:{stringMinute}:{stringSecond}\n            </TimerBox>\n        )\n    }\n}\n\nexport default Timer","import React, {Component} from \"react\"\nimport Head from 'next/head'\nimport Error from 'next/error'\nimport Layout from \"../../components/layout\"\nimport Banner from \"../../components/banner\"\nimport Preview from \"../../components/preview\"\nimport Comments from \"../../components/commentBox\"\nimport Timer from \"../../components/timer\"\nimport styled from \"styled-components\"\nimport axios from 'axios'\nimport {phoneMaxRowSize, tabletMaxRowSize, sidePaddingSize} from '../../styles/layout'\n\nconst MainContainer = styled.div`\n  text-align: center;\n`\n\nconst SubContainer = styled.div`\n  display: inline-block;\n  width: 100%;\n  max-width: ${tabletMaxRowSize};\n  margin: 20px 0;\n`\n\nconst HelloContainer = styled.div`\n  text-align: center;\n`\n\nconst HelloSubContainer = styled.div`\n  display: inline-block;\n  width: 100%;\n  max-width: ${tabletMaxRowSize};\n  margin: 20px 0;\n`\n\nconst HelloTitle = styled.div`\n  span {\n    font-size: 2rem;\n    border-bottom: 0.4rem solid black;\n    font-weight: bold;\n  }\n  \n  margin: 1rem;\n`\n\nconst HelloContent = styled.div`\n  margin: auto;\n  padding: 0.3rem;\n  max-width: 720px;\n  width: 100%;\n`\n\nexport default () => {\n    return (\n        <Layout>\n          <Head>\n            <title>I'm JustKode!</title>\n            <meta name=\"description\" content=\"Hello! I'm JustKode!\"></meta>\n\t\t\t<meta property=\"og:title\" content=\"Hello! JustKode!\"></meta>\n        \t<meta property=\"og:description\" content=\"Hello! I'm JustKode!\"></meta>\n          </Head>\n            <Banner></Banner>\n\t\t\t<HelloContainer>\n\t\t\t  <HelloSubContainer>\n\t\t\t\t<HelloTitle><span>Military Service</span></HelloTitle>\n\t\t\t\t<HelloContent>\n\t\t\t\t\t2019.06.03~2020.12.29 육군 복무.... 의 이유로 꾸준한 글 작성은 힘들게 되었습니다!<br/>\n\t\t\t\t\t군대에서 나름 공부 좀 해온 다음에 다시 업데이트 하겠습니다 ㅎㅎ..<br/>\n\t\t\t\t</HelloContent>\n\t\t\t\t<HelloContent style={{fontWeight: 'bold', padding: '1.2rem', fontSize: '1.2rem'}}>전역 한 이후에 만나요!</HelloContent>\n\t\t\t<HelloContainer style={{backgroundColor: '#003300'}}>\n              <HelloTitle><span style={{color: 'white', borderBottomColor: 'white'}}>Discharge Countdown</span></HelloTitle>\n              <HelloContent style={{padding: '70px 0'}}>\n                <Timer />\n              </HelloContent>\n            </HelloContainer>\n\t\t\t  </HelloSubContainer>\n\t\t\t</HelloContainer>\n        </Layout>\n    )\n  }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAYA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;;;;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;;;;AA3CA;AACA;AA6CA;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}