{"version":3,"sources":["webpack:///./src/layouts/cppListLayout.tsx"],"names":["MainContainer","styled","div","SubContainer","BottomContainer","TitleContainer","span","LittleContainer","PostBanner","BackgroundContainer","NavContainer","BlackContainer","CircleWrapper","Post","edges","data","allMarkdownRemark","pageContext","Posts","filter","edge","node","frontmatter","date","map","key","id","title","tags","img","summary","path","currentPage","description","keyword","style","to","numPages","pageQuery"],"mappings":"2FAAA,sMASMA,EAAgBC,IAAOC,IAAV,mFAAGD,CAAH,MAIbE,EAAeF,IAAOC,IAAV,kFAAGD,CAAH,mGASZG,EAAkBH,IAAOC,IAAV,qFAAGD,CAAH,8EAiBfI,GAVgBJ,IAAOC,IAAV,mFAAGD,CAAH,iDAKOA,IAAOK,KAAV,uFAAGL,CAAH,yCAKAA,IAAOC,IAAV,oFAAGD,CAAH,gFAQdM,EAAkBN,IAAOC,IAAV,qFAAGD,CAAH,mCAKfO,EAAaP,IAAOC,IAAV,gFAAGD,CAAH,4EAQVQ,EAAsBR,IAAOC,IAAV,yFAAGD,CAAH,0YAuBnBS,EAAeT,IAAOC,IAAV,kFAAGD,CAAH,yIAaZU,EAAiBV,IAAOC,IAAV,qFAAGD,CAAH,gHAUdW,EAAgBX,IAAOC,IAAV,oFAAGD,CAAH,8OAgBJ,SAASY,EAAT,GAIZ,IAFmBC,EAEnB,EAHFC,KACCC,kBAAoBF,MAClBG,EACD,EADCA,YAGGC,EAAQJ,EACbK,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OAAI,kBAAC,IAAD,CACRK,IAAKL,EAAKC,KAAKK,GACfC,MAAOP,EAAKC,KAAKC,YAAYK,MAC7BJ,KAAMH,EAAKC,KAAKC,YAAYC,KAC5BK,KAAMR,EAAKC,KAAKC,YAAYM,KAC5BC,IAAKT,EAAKC,KAAKC,YAAYO,IAC3BC,QAASV,EAAKC,KAAKC,YAAYQ,QAC/BC,KAAMX,EAAKC,KAAKC,YAAYS,UAEjC,OACC,kBAAC/B,EAAD,KACC,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAK2B,MAAK,cAAgBV,EAAYe,YAAeC,YAAW,iDAAoDC,QAAO,wBAC3H,kBAAC1B,EAAD,KACC,kBAACG,EAAD,MACA,kBAACF,EAAD,MACA,kBAACN,EAAD,CAAcgC,MAAO,CAAC,OAAU,SAC/B,kBAAC/B,EAAD,KACC,kBAACC,EAAD,mBAA4BY,EAAYe,aACxC,kBAACzB,EAAD,0DAIH,kBAACJ,EAAD,CAAcgC,MAAO,CAAC,QAAW,cAC/BjB,GAEF,kBAACR,EAAD,KACEO,EAAYe,YAAc,GAAK,kBAAC,OAAD,CAAMI,GAAE,SAAUnB,EAAYe,YAAc,IAAK,kBAAC,IAAD,OACrD,GAA3Bf,EAAYe,aAAoB,kBAAC,OAAD,CAAMI,GAAE,QAAU,kBAAC,IAAD,OACnD,kBAACxB,EAAD,KAAgBK,EAAYe,aAC3Bf,EAAYe,YAAcf,EAAYoB,UAAY,kBAAC,OAAD,CAAMD,GAAE,SAAUnB,EAAYe,YAAc,IAAK,kBAAC,IAAD,QAErG,kBAAC,IAAD,OAKI,IAAMM,EAAY","file":"component---src-layouts-cpp-list-layout-tsx-6e60941be1c7cef4d961.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Header from \"../components/header.tsx\"\nimport Footer from \"../components/footer.tsx\"\nimport SEO from \"../components/seo.tsx\"\nimport PostBlock from \"../components/postBlock.tsx\"\nimport { graphql, Link } from \"gatsby\"\nimport { FaRegCalendar, FaChevronLeft, FaChevronRight } from \"react-icons/fa\"\n\nconst MainContainer = styled.div`\n\n`\n\nconst SubContainer = styled.div`\n\twidth: 100%;\n\tmax-width: 1080px;\n\tmargin: auto;\n\tpadding: 20px;\n\tbox-sizing: border-box;\n\tposition: relative;\n`\n\nconst BottomContainer = styled.div`\n\tposition: absolute;\n\tbottom: 0%;\n\tpadding-bottom: 12px;\n\twidth: calc(100% - 40px);\n`\n\nconst HeadContainer = styled.div`\n\twidth: 100%;\n\tborder-bottom: 1px solid #bbbbbb;\n`\n\nconst CategoryContainer = styled.span`\n\tpadding: 8px;\n\tbackground-color: black;\n`\n\nconst TitleContainer = styled.div`\n\tfont-weight: 600;\n\tfont-size: 32px;\n\t@media (max-width: 1079px) {\n\t\tfont-size: 24px;\n\t}\n`\n\nconst LittleContainer = styled.div`\n\tfont-size: 14px;\n\tcolor: #bbbbbb;\n`\n\nconst PostBanner = styled.div`\n\twidth: 100%;\n\theight: 300px;\n\tcolor: white;\n\tposition: relative;\n\toverflow: hidden;\n`\n\nconst BackgroundContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: url('/cpp_background.png');\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center;\n\tanimation-name: zoomin;\n    animation-duration: 5s;\n\tanimation-fill-mode: both;\n\tz-index: -1;\n\tposition: absolute;\n\n\t@-webkit-keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n\t@keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n`\n\nconst NavContainer = styled.div`\n\tpadding: 8px;\n\ttext-align: center;\n\tfont-size: 24px;\n\tfont-weight: bold;\n\tsvg {\n\t\tmargin-bottom: -4px;\n\t\tmargin-left: 4px;\n\t\tmaring-right: 4px;\n\t\tcolor: black;\n\t}\n`\n\nconst BlackContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\tbackground-color: black;\n\tpointer-events: none;\n\tz-index: 0;\n\topacity: 0.5;\n`\n\nconst CircleWrapper = styled.div`\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\twidth: 40px;\n\theight: 40px;\n\tpadding-top: 4px;\n\tborder-radius: 50%;\n\tbackground-color: black;\n\tcolor: white;\n\ttext-align: center;\n\tfont-family: Montserrat, Noto Sans KR, Helvetica,Arial, sans-serif; \n\tfont-weight: 100;\n`\n\n\n\nexport default function Post({\n\tdata: {\n\t\tallMarkdownRemark: {edges},\n\t}, pageContext\n}) {\n\t\n\tconst Posts = edges\n\t.filter(edge => !!edge.node.frontmatter.date)\n\t.map(edge => <PostBlock\n\t\t\t\t\t key={edge.node.id}\n\t\t\t\t\t title={edge.node.frontmatter.title}\n\t\t\t\t\t date={edge.node.frontmatter.date}\n\t\t\t\t\t tags={edge.node.frontmatter.tags}\n\t\t\t\t\t img={edge.node.frontmatter.img}\n\t\t\t\t\t summary={edge.node.frontmatter.summary}\n\t\t\t\t\t path={edge.node.frontmatter.path}/>)\n\t\n\treturn (\n\t\t<MainContainer>\n\t\t\t<Header />\n\t\t\t<SEO title={`C++ - Page ${pageContext.currentPage}`} description={`C++로 자기 발등을 쏘는 일은 드물지만, 일단 쏘게 되면 다리가 통째로 날아간다.`} keyword={`C++, cplusplus, c++`}/>\n\t\t\t<PostBanner>\n\t\t\t\t<BlackContainer />\n\t\t\t\t<BackgroundContainer />\n\t\t\t\t<SubContainer style={{\"height\": \"100%\"}}>\n\t\t\t\t\t<BottomContainer>\n\t\t\t\t\t\t<TitleContainer>C++ - Page {pageContext.currentPage}</TitleContainer>\n\t\t\t\t\t\t<LittleContainer>C++로 자기 발등을 쏘는 일은 드물지만, 일단 쏘게 되면 다리가 통째로 날아간다.</LittleContainer>\n\t\t\t\t\t</BottomContainer>\n\t\t\t\t</SubContainer>\n\t\t\t</PostBanner>\n\t\t\t<SubContainer style={{\"padding\": \"20px 15px\"}}>\n\t\t\t\t{Posts}\n\t\t\t</SubContainer>\n\t\t\t<NavContainer>\n\t\t\t\t{pageContext.currentPage > 2 && <Link to={`/c++/${pageContext.currentPage - 1}`}><FaChevronLeft /></Link>}\n\t\t\t\t{pageContext.currentPage == 2 && <Link to={`/c++`}><FaChevronLeft /></Link>}\n\t\t\t\t<CircleWrapper>{pageContext.currentPage}</CircleWrapper>\n\t\t\t\t{pageContext.currentPage < pageContext.numPages && <Link to={`/c++/${pageContext.currentPage + 1}`}><FaChevronRight /></Link>}\n\t\t\t</NavContainer>\n\t\t\t<Footer />\n\t\t</MainContainer>\n\t)\n}\n\nexport const pageQuery = graphql`\n  query cppListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n\t  filter: {frontmatter: {tags: { in: [\"C++\"] }}}\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            tags\n            path\n            title\n            img\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}