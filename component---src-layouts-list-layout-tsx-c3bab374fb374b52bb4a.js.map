{"version":3,"file":"component---src-layouts-list-layout-tsx-c3bab374fb374b52bb4a.js","mappings":"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","sources":["webpack://JustKode-Gatsby/./src/components/postBlock.tsx","webpack://JustKode-Gatsby/./src/components/wrapper/categoryWrapper.tsx","webpack://JustKode-Gatsby/./src/layouts/listLayout.tsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { FaCalendarDay } from \"react-icons/fa\"\nimport { Link } from 'gatsby'\n\nimport CategoryWrapper from \"./wrapper/categoryWrapper\"\n\nconst MainContainer = styled.div`\n\tdisplay: inline-block;\n\twidth: calc(100% - 30px);\n\tmax-width: 330px;\n\theight: 400px;\n\tmargin: 10px;\n\tposition: relative;\n\ttext-align: left;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\t\n\t\n\t@media (max-width: 1079px) {\n\t\tmax-width: 400px;\n\t\theight: 300px;\n\t}\n\n\t@media (max-width: 887px) {\n\t\tmax-width: none;\n\t}\n\n\t&:hover {\n\t\tbackground-size: calc(cover * 1.2);\n\t}\n\n`\nconst BackgroundContainer = styled.div<{src: string}>`\n\twidth: 100%;\n\theight: 100%;\n\t\n\tposition: absolute;\n\topacity: 0.5;\n\tbackground-image: url('${props => props.src}');\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: center top;\n\ttransition: 0.4s;\n\n\t&:hover {\n\t\ttransform: scale(1.2);\n\t}\n`\n\nconst BottomContainer = styled.div`\n\twidth: 100%;\n\tposition: absolute;\n\tbottom: 0%;\n\n\ta {\n\t\tcolor: white;\n\t\ttext-decoration: none;\n\t}\n`\n\nconst Title = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tpadding: 8px;\n\tcolor: white;\n\ttransition: 0.4s;\t\n\n\t&:hover {\n\t\tcolor: #cccccc;\n\t}\n`\n\nconst TimeContainer = styled.div`\n\tfont-size: 14px;\n\tcolor: #cccccc;\n\tpadding: 8px;\n`\n\nconst Content = styled.div`\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tcolor: white;\n\tpadding-left: 8px;\n`\n\nconst BlackContainer = styled.div`\n\tz-index: -1;\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\tbackground-color: black;\n\tpointer-events: none;\n`\n\ninterface PostPreview {\n\ttitle: string;\n\ttags: Array<string>;\n\tdate: string;\n\timg: string;\n\tpath: string;\n\tsummary: string;\n\tkey: string;\n}\n\nconst PostBlock: React.FunctionComponent<PostPreview> = (props) => {\n\tconst tags = props.tags.map(x => <CategoryWrapper key={x}><Link to={`/${x.toLowerCase()}`}>{x}</Link></CategoryWrapper>)\n\t\n\treturn (\n\t\t\n\t\t\t<MainContainer>\n\t\t\t\t<Link to={`${props.path}`}>\n\t\t\t\t\t<BackgroundContainer src={`${props.img}`}/>\n\t\t\t\t\t<BlackContainer/>\n\t\t\t\t</Link>\n\t\t\t\t<BottomContainer>\n\t\t\t\t\t<div style={{\"margin\": \"0 8px\"}}>{tags}</div>\n\t\t\t\t\t<Link to={`${props.path}`}>\n\t\t\t\t\t\t<Title>{props.title}</Title>\n\t\t\t\t\t\t<Content>{props.summary}</Content>\n\t\t\t\t\t\t<TimeContainer><FaCalendarDay /> {props.date}</TimeContainer>\n\t\t\t\t\t</Link>\n\t\t\t\t</BottomContainer>\n\t\t\t</MainContainer>\n\t\t\n\t)\n}\n\nexport default PostBlock;","import styled from \"styled-components\"\n\nexport default styled.span`\n\tdisplay: inline-block;\n    margin-right: 4px;\n\tpadding: 6px 8px;\n\tbackground-color: black;\n    font-size: 12px;\n\n\ta {\n\t\tcolor: white;\n\t\ttext-decoration: none;\n\t\tfont-family: Montserrat,Helvetica,Arial,sans-serif;\n\t}\n\t@media (max-width: 1079px) {\n\t\tpadding: 6px;\n\t\tfont-size: 10px;\n\t}\n`","import React from \"react\"\nimport styled from \"styled-components\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\nimport SEO from \"../components/seo\"\nimport PostBlock from \"../components/postBlock\"\nimport { graphql, Link } from \"gatsby\"\nimport { FaRegCalendar, FaChevronLeft, FaChevronRight } from \"react-icons/fa\"\n\nconst MainContainer = styled.div`\n\n`\n\nconst SubContainer = styled.div`\n\twidth: 100%;\n\tmax-width: 1080px;\n\tmargin: auto;\n\tpadding: 20px;\n\tbox-sizing: border-box;\n\tposition: relative;\n  \n`\n\nconst BottomContainer = styled.div`\n\tposition: absolute;\n\tbottom: 0%;\n\tpadding-bottom: 12px;\n\twidth: calc(100% - 40px);\n`\n\nconst HeadContainer = styled.div`\n\twidth: 100%;\n\tborder-bottom: 1px solid #bbbbbb;\n`\n\nconst CategoryContainer = styled.span`\n\tpadding: 8px;\n\tbackground-color: black;\n`\n\nconst TitleContainer = styled.div`\n\tfont-weight: 600;\n\tfont-size: 32px;\n\t@media (max-width: 1079px) {\n\t\tfont-size: 24px;\n\t}\n`\n\nconst LittleContainer = styled.div`\n\tfont-size: 14px;\n\tcolor: #bbbbbb;\n`\n\nconst PostBanner = styled.div`\n\twidth: 100%;\n\theight: 300px;\n\tcolor: white;\n\tposition: relative;\n\toverflow: hidden;\n`\n\nconst BackgroundContainer = styled.div<{img: string, imagePosition: string}>`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: url('${props => props.img}');\n\tbackground-repeat: no-repeat;\n\tbackground-size: cover;\n\tbackground-position: ${props => props.imagePosition};\n\tanimation-name: zoomin;\n  animation-duration: 5s;\n\tanimation-fill-mode: both;\n\tz-index: -1;\n\tposition: absolute;\n\n\t@-webkit-keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n\t@keyframes zoomin {\n\t\tfrom {transform: scale(1);}\n\t\tto {transform: scale(1.3);}\n\t}\n`\n\nconst NavContainer = styled.div`\n\tpadding: 8px;\n\ttext-align: center;\n\tfont-size: 24px;\n\tfont-weight: bold;\n\tsvg {\n\t\tmargin-bottom: -4px;\n\t\tmargin-left: 4px;\n\t\tmargin-right: 4px;\n\t\tcolor: black;\n\t}\n`\n\nconst BlackContainer = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tposition: absolute;\n\tbackground-color: black;\n\tpointer-events: none;\n\tz-index: 0;\n\topacity: 0.5;\n`\n\nconst CircleWrapper = styled.div`\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\twidth: 40px;\n\theight: 40px;\n\tpadding-top: 4px;\n\tborder-radius: 50%;\n\tbackground-color: black;\n\tcolor: white;\n\ttext-align: center;\n\tfont-family: Montserrat, Noto Sans KR, Helvetica,Arial, sans-serif; \n\tfont-weight: 100;\n`\n\nexport default function Post({\n\tdata: {\n\t\tallMarkdownRemark: {edges},\n\t}, pageContext\n}) {\n\t\n\tconst Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date)\n    .map(edge => <PostBlock\n                    key={edge.node.id}\n                    title={edge.node.frontmatter.title}\n                    date={edge.node.frontmatter.date}\n                    tags={edge.node.frontmatter.tags}\n                    img={edge.node.frontmatter.img}\n                    summary={edge.node.frontmatter.summary}\n                    path={edge.node.frontmatter.path}\n                  />)\n\t\n\treturn (\n\t\t<MainContainer>\n\t\t\t<Header />\n\t\t\t<SEO title={`${pageContext.title} - Page ${pageContext.currentPage}`} description={pageContext.description} keyword={pageContext.keyword}/>\n\t\t\t<PostBanner>\n\t\t\t\t<BlackContainer />\n\t\t\t\t<BackgroundContainer\n          img={pageContext.img}\n          imagePosition={pageContext.imagePosition}\n        />\n\t\t\t\t<SubContainer style={{\"height\": \"100%\"}}>\n\t\t\t\t\t<BottomContainer>\n\t\t\t\t\t\t<TitleContainer>{pageContext.title} - Page {pageContext.currentPage}</TitleContainer>\n\t\t\t\t\t\t<LittleContainer>{pageContext.description}</LittleContainer>\n\t\t\t\t\t</BottomContainer>\n\t\t\t\t</SubContainer>\n\t\t\t</PostBanner>\n\t\t\t<SubContainer style={{\"padding\": \"20px 15px\", \"textAlign\": \"center\"}}>\n\t\t\t\t{Posts}\n\t\t\t</SubContainer>\n\t\t\t<NavContainer>\n\t\t\t\t{pageContext.currentPage > 2 && <Link to={`/${pageContext.url}/${pageContext.currentPage - 1}`}><FaChevronLeft /></Link>}\n\t\t\t\t{pageContext.currentPage == 2 && <Link to={`/${pageContext.url}`}><FaChevronLeft /></Link>}\n\t\t\t\t<CircleWrapper>{pageContext.currentPage}</CircleWrapper>\n\t\t\t\t{pageContext.currentPage < pageContext.numPages && <Link to={`/${pageContext.url}/${pageContext.currentPage + 1}`}><FaChevronRight /></Link>}\n\t\t\t</NavContainer>\n\t\t\t<Footer />\n\t\t</MainContainer>\n\t)\n}\n\nexport const pageQuery = graphql`\n  query listQuery($skip: Int!, $limit: Int!, $filter: MarkdownRemarkFilterInput) {\n    allMarkdownRemark(\n      filter: $filter\n      sort: { frontmatter: {date: DESC} }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            path\n            title\n            img\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"names":["MainContainer","styled","displayName","componentId","BackgroundContainer","props","src","BottomContainer","Title","TimeContainer","Content","BlackContainer","tags","map","x","React","CategoryWrapper","key","Link","to","toLowerCase","path","img","style","title","summary","FaCalendarDay","date","SubContainer","TitleContainer","LittleContainer","PostBanner","imagePosition","NavContainer","CircleWrapper","Post","_ref","data","allMarkdownRemark","edges","pageContext","Posts","filter","edge","node","frontmatter","PostBlock","id","Header","SEO","currentPage","description","keyword","url","FaChevronLeft","numPages","FaChevronRight","Footer"],"sourceRoot":""}